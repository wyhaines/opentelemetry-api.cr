crystal_doc_search_index_callback({"repository_name":"opentelemetry-api","body":"![OpenTelemetry CI](https://img.shields.io/github/workflow/status/wyhaines/opentelemetry-api.cr/OpenTelemetry%20CI?style=for-the-badge&logo=GitHub)\n[![GitHub release](https://img.shields.io/github/release/wyhaines/opentelemetry-api.cr.svg?style=for-the-badge)](https://github.com/wyhaines/opentelemetry-api.cr/releases)\n![GitHub commits since latest release (by SemVer)](https://img.shields.io/github/commits-since/wyhaines/opentelemetry-api.cr/latest?style=for-the-badge)\n\n# OpenTelemetry-API\n\nThis is an implementation of the OpenTelemetry API. The API layer provides a set of interface definitions, and NO-OP implementations of those interfaces. It is not useful on its own to instrument your code with OpenTelemetry, but rather is intended to be used by the [SDK], which provides the functionality behind the API interfaces defined in this repo.\n\n## Full Generated Documentation\n\n[https://wyhaines.github.io/opentelemetry-api.cr/](https://wyhaines.github.io/opentelemetry-api.cr/)\n\n## Discord\n\nA Discord community for help and discussion with Crystal OpenTelemetry can be found at:\n\nhttps://discord.gg/WKe9WWJ3HE\n\n## Installation\n\nYou will not normally directly use this shard. If you want to instrument your code with OpenTelemetry, see the [Instrumentation shard](https://github.com/wyhaines/opentelemetry-instrumentation.cr/) or the [SDK].\n\nIf you do have reason to use this shard directly, however:\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     opentelemetry-api:\n       github: wyhaines/opentelemetry-api.cr\n   ```\n\n2. Run `shards install`\n\n## Usage\n\nTo gain access to all of the API (i.e. NO-OP) implementations of the OTel API interfaces:\n\n```crystal\nrequire \"opentelemetry-api\"\n```\n\nThis will define a set of classes and structs which implement the OpenTelemetry API interfaces with methods that do nothing.\n\nIf you only want access to the API interfaces (which is what the [SDK] uses):\n\n```crystal\nrequire \"opentelemetry-api/src/interfaces\"\n```\n\n## Development\n\nIf you want to help with development, [fork](https://github.com/wyhaines/opentelemetry-api.cr/fork) this repo. Do your work in a branch inside your fork, and when it is ready (and has specs), submit a PR. See [Contributing] below.\n\nIf you have a question or find an issue, you can [start a discussion](https://github.com/wyhaines/opentelemetry-api.cr/discussions/new) or [create an issue](https://github.com/wyhaines/opentelemetry-api.cr/issues/new/choose).\n\n## Contributing\n\n1. Fork it (https://github.com/wyhaines/opentelemetry-api.cr/fork)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Kirk Haines](https://github.com/wyhaines) - creator and maintainer\n\n![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/wyhaines/opentelemetry-api.cr?style=for-the-badge)\n![GitHub issues](https://img.shields.io/github/issues/wyhaines/opentelemetry-api.cr?style=for-the-badge)\n\n[Contributing]: #contributing\n[SDK]: https://github.com/wyhaines/opentelemetry-sdk.cr","program":{"html_id":"opentelemetry-api/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"opentelemetry-api","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"opentelemetry-api/OpenTelemetry","path":"OpenTelemetry.html","kind":"module","full_name":"OpenTelemetry","name":"OpenTelemetry","abstract":false,"locations":[{"filename":"src/anyattribute.cr","line_number":3,"url":null},{"filename":"src/anyvalue.cr","line_number":1,"url":null},{"filename":"src/api/abstract_context.cr","line_number":4,"url":null},{"filename":"src/api/abstract_event.cr","line_number":1,"url":null},{"filename":"src/api/abstract_id_generator.cr","line_number":3,"url":null},{"filename":"src/api/abstract_resource.cr","line_number":3,"url":null},{"filename":"src/api/abstract_span.cr","line_number":4,"url":null},{"filename":"src/api/abstract_span_context.cr","line_number":3,"url":null},{"filename":"src/api/abstract_status.cr","line_number":1,"url":null},{"filename":"src/api/context.cr","line_number":5,"url":null},{"filename":"src/api/context/key.cr","line_number":4,"url":null},{"filename":"src/api/event.cr","line_number":1,"url":null},{"filename":"src/api/id_generator.cr","line_number":3,"url":null},{"filename":"src/api/id_generator/abstract_base.cr","line_number":1,"url":null},{"filename":"src/api/id_generator/base.cr","line_number":3,"url":null},{"filename":"src/api/resource.cr","line_number":3,"url":null},{"filename":"src/api/sendable.cr","line_number":1,"url":null},{"filename":"src/api/span.cr","line_number":9,"url":null},{"filename":"src/api/span/abstract_kind.cr","line_number":3,"url":null},{"filename":"src/api/span/kind.cr","line_number":3,"url":null},{"filename":"src/api/span_context.cr","line_number":3,"url":null},{"filename":"src/api/span_context/abstract_config.cr","line_number":3,"url":null},{"filename":"src/api/span_context/config.cr","line_number":3,"url":null},{"filename":"src/api/status.cr","line_number":3,"url":null},{"filename":"src/api/trace_flags.cr","line_number":1,"url":null},{"filename":"src/api/version.cr","line_number":1,"url":null},{"filename":"src/attribute.cr","line_number":3,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"types":[{"html_id":"opentelemetry-api/OpenTelemetry/AnyAttribute","path":"OpenTelemetry/AnyAttribute.html","kind":"class","full_name":"OpenTelemetry::AnyAttribute","name":"AnyAttribute","abstract":false,"superclass":{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/anyattribute.cr","line_number":5,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry","kind":"module","full_name":"OpenTelemetry","name":"OpenTelemetry"},"doc":"This is a wrapper around the supported attribute types.","summary":"<p>This is a wrapper around the supported attribute types.</p>","constructors":[{"html_id":"new(key:String,value:ValueTypes|UInt64)-class-method","name":"new","doc":"ameba:disable Metrics/CyclomaticComplexity","summary":"<p>ameba:disable Metrics/CyclomaticComplexity</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"ValueTypes | UInt64"}],"args_string":"(key : String, value : ValueTypes | UInt64)","args_html":"(key : String, value : <a href=\"../OpenTelemetry/ValueTypes.html\">ValueTypes</a> | UInt64)","location":{"filename":"src/anyattribute.cr","line_number":24,"url":null},"def":{"name":"new","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"ValueTypes | UInt64"}],"visibility":"Public","body":"_ = allocate\n_.initialize(key, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(raw:Attribute)-class-method","name":"new","abstract":false,"args":[{"name":"raw","external_name":"raw","restriction":"Attribute"}],"args_string":"(raw : Attribute)","args_html":"(raw : <a href=\"../OpenTelemetry/Attribute.html\">Attribute</a>)","location":{"filename":"src/anyattribute.cr","line_number":19,"url":null},"def":{"name":"new","args":[{"name":"raw","external_name":"raw","restriction":"Attribute"}],"visibility":"Public","body":"_ = allocate\n_.initialize(raw)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"<<(value:ValueType|ValueArrays)-instance-method","name":"<<","doc":"ameba:disable Metrics/CyclomaticComplexity","summary":"<p>ameba:disable Metrics/CyclomaticComplexity</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"ValueType | ValueArrays"}],"args_string":"(value : ValueType | ValueArrays)","args_html":"(value : <a href=\"../OpenTelemetry/ValueType.html\">ValueType</a> | <a href=\"../OpenTelemetry/ValueArrays.html\">ValueArrays</a>)","location":{"filename":"src/anyattribute.cr","line_number":52,"url":null},"def":{"name":"<<","args":[{"name":"value","external_name":"value","restriction":"ValueType | ValueArrays"}],"visibility":"Public","body":"case object = @raw\nwhen Attribute(String)\n  @raw = Attribute(Array(String)).new(object.key, [object.value.as(String)])\nwhen Attribute(Bool)\n  @raw = Attribute(Array(Bool)).new(object.key, [object.value.as(Bool)])\nwhen Attribute(Float64)\n  @raw = Attribute(Array(Float64)).new(@raw.key, [@raw.value.as(Float64)])\nwhen Attribute(Int64)\n  @raw = Attribute(Array(Int64)).new(@raw.key, [@raw.value.as(Int64)])\nwhen Attribute(Int32)\n  @raw = Attribute(Array(Int32)).new(@raw.key, [@raw.value.as(Int32)])\nend\ncase value\nwhen String\n  (@raw.value.as(Array(String))) << value\nwhen Bool\n  (@raw.value.as(Array(Bool))) << value\nwhen Float64\n  (@raw.value.as(Array(Float64))) << value\nwhen Int64\n  (@raw.value.as(Array(Int64))) << value\nwhen Int32\n  (@raw.value.as(Array(Int32))) << value\nwhen Array(String)\n  (@raw.value.as(Array(String))).concat(value)\nwhen Array(Bool)\n  (@raw.value.as(Array(Bool))).concat(value)\nwhen Array(Float64)\n  (@raw.value.as(Array(Float64))).concat(value)\nwhen Array(Int64)\n  (@raw.value.as(Array(Int64))).concat(value)\nwhen Array(Int32)\n  (@raw.value.as(Array(Int32))).concat(value)\nelse\n  raise(ArgumentError.new(\"#{value} is not a valid type\"))\nend\n"}},{"html_id":"[](index)-instance-method","name":"[]","abstract":false,"args":[{"name":"index","external_name":"index","restriction":""}],"args_string":"(index)","args_html":"(index)","location":{"filename":"src/anyattribute.cr","line_number":100,"url":null},"def":{"name":"[]","args":[{"name":"index","external_name":"index","restriction":""}],"visibility":"Public","body":"case object = @raw.value\nwhen Array, String\n  object[index]\nelse\n  raise(\"Expected Attribute(Array) or Attribute(String) for #[](index : Int), not #{object.class}\")\nend"}},{"html_id":"[]=(index,value)-instance-method","name":"[]=","abstract":false,"args":[{"name":"index","external_name":"index","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(index, value)","args_html":"(index, value)","location":{"filename":"src/anyattribute.cr","line_number":118,"url":null},"def":{"name":"[]=","args":[{"name":"index","external_name":"index","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"case value\nwhen String\n  (@raw.value.as(Array(String)))[index] = value.as(String)\nwhen Bool\n  (@raw.value.as(Array(Bool)))[index] = value.as(Bool)\nwhen Float64\n  (@raw.value.as(Array(Float64)))[index] = value.as(Float64)\nwhen Int64\n  (@raw.value.as(Array(Int64)))[index] = value.as(Int64)\nwhen Int32\n  (@raw.value.as(Array(Int32)))[index] = value.as(Int32)\nelse\n  raise(\"Expected Attribute(Array) for #[]=(index : Int, value : ValueType), not #{@raw.value.class}\")\nend"}},{"html_id":"[]?(index)-instance-method","name":"[]?","abstract":false,"args":[{"name":"index","external_name":"index","restriction":""}],"args_string":"(index)","args_html":"(index)","location":{"filename":"src/anyattribute.cr","line_number":109,"url":null},"def":{"name":"[]?","args":[{"name":"index","external_name":"index","restriction":""}],"visibility":"Public","body":"case object = @raw.value\nwhen Array, String\n  object[index]?\nelse\n  raise(\"Expected Attribute(Array) or Attribute(String) for #[](index : Int), not #{object.class}\")\nend"}},{"html_id":"key-instance-method","name":"key","abstract":false,"location":{"filename":"src/anyattribute.cr","line_number":96,"url":null},"def":{"name":"key","visibility":"Public","body":"@raw.key"}},{"html_id":"raw:Type-instance-method","name":"raw","abstract":false,"location":{"filename":"src/anyattribute.cr","line_number":17,"url":null},"def":{"name":"raw","return_type":"Type","visibility":"Public","body":"@raw"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/anyattribute.cr","line_number":139,"url":null},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":"json.field(key, value.to_json(json))"}},{"html_id":"to_json-instance-method","name":"to_json","abstract":false,"location":{"filename":"src/anyattribute.cr","line_number":135,"url":null},"def":{"name":"to_json","visibility":"Public","body":"\"\\\"#{key}\\\":#{value.to_json}\""}},{"html_id":"value-instance-method","name":"value","abstract":false,"location":{"filename":"src/anyattribute.cr","line_number":92,"url":null},"def":{"name":"value","visibility":"Public","body":"@raw.value"}}],"types":[{"html_id":"opentelemetry-api/OpenTelemetry/AnyAttribute/Type","path":"OpenTelemetry/AnyAttribute/Type.html","kind":"alias","full_name":"OpenTelemetry::AnyAttribute::Type","name":"Type","abstract":false,"locations":[{"filename":"src/anyattribute.cr","line_number":6,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":true,"aliased":"(OpenTelemetry::Attribute(Array(Bool)) | OpenTelemetry::Attribute(Array(Float64)) | OpenTelemetry::Attribute(Array(Int32)) | OpenTelemetry::Attribute(Array(Int64)) | OpenTelemetry::Attribute(Array(String)) | OpenTelemetry::Attribute(Bool) | OpenTelemetry::Attribute(Float64) | OpenTelemetry::Attribute(Int32) | OpenTelemetry::Attribute(Int64) | OpenTelemetry::Attribute(String))","aliased_html":"<a href=\"../../OpenTelemetry/Attribute.html\">OpenTelemetry::Attribute(Array(Bool))</a> | <a href=\"../../OpenTelemetry/Attribute.html\">OpenTelemetry::Attribute(Array(Float64))</a> | <a href=\"../../OpenTelemetry/Attribute.html\">OpenTelemetry::Attribute(Array(Int32))</a> | <a href=\"../../OpenTelemetry/Attribute.html\">OpenTelemetry::Attribute(Array(Int64))</a> | <a href=\"../../OpenTelemetry/Attribute.html\">OpenTelemetry::Attribute(Array(String))</a> | <a href=\"../../OpenTelemetry/Attribute.html\">OpenTelemetry::Attribute(Bool)</a> | <a href=\"../../OpenTelemetry/Attribute.html\">OpenTelemetry::Attribute(Float64)</a> | <a href=\"../../OpenTelemetry/Attribute.html\">OpenTelemetry::Attribute(Int32)</a> | <a href=\"../../OpenTelemetry/Attribute.html\">OpenTelemetry::Attribute(Int64)</a> | <a href=\"../../OpenTelemetry/Attribute.html\">OpenTelemetry::Attribute(String)</a>","const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/AnyAttribute","kind":"class","full_name":"OpenTelemetry::AnyAttribute","name":"AnyAttribute"}}]},{"html_id":"opentelemetry-api/OpenTelemetry/AnyValue","path":"OpenTelemetry/AnyValue.html","kind":"class","full_name":"OpenTelemetry::AnyValue","name":"AnyValue","abstract":false,"superclass":{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/anyvalue.cr","line_number":2,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry","kind":"module","full_name":"OpenTelemetry","name":"OpenTelemetry"},"constructors":[{"html_id":"new(value:ValueTypes|UInt64)-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"ValueTypes | UInt64"}],"args_string":"(value : ValueTypes | UInt64)","args_html":"(value : <a href=\"../OpenTelemetry/ValueTypes.html\">ValueTypes</a> | UInt64)","location":{"filename":"src/anyvalue.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"ValueTypes | UInt64"}],"visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"<<(value:ValueType|ValueArrays)-instance-method","name":"<<","doc":"ameba:disable Metrics/CyclomaticComplexity","summary":"<p>ameba:disable Metrics/CyclomaticComplexity</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"ValueType | ValueArrays"}],"args_string":"(value : ValueType | ValueArrays)","args_html":"(value : <a href=\"../OpenTelemetry/ValueType.html\">ValueType</a> | <a href=\"../OpenTelemetry/ValueArrays.html\">ValueArrays</a>)","location":{"filename":"src/anyvalue.cr","line_number":14,"url":null},"def":{"name":"<<","args":[{"name":"value","external_name":"value","restriction":"ValueType | ValueArrays"}],"visibility":"Public","body":"case object = @raw\nwhen Attribute(String)\n  @raw = Attribute(Array(String)).new(object.key, [object.value.as(String)])\nwhen Attribute(Bool)\n  @raw = Attribute(Array(Bool)).new(object.key, [object.value.as(Bool)])\nwhen Attribute(Float64)\n  @raw = Attribute(Array(Float64)).new(@raw.key, [@raw.value.as(Float64)])\nwhen Attribute(Int64)\n  @raw = Attribute(Array(Int64)).new(@raw.key, [@raw.value.as(Int64)])\nwhen Attribute(Int32)\n  @raw = Attribute(Array(Int32)).new(@raw.key, [@raw.value.as(Int32)])\nend\ncase value\nwhen String\n  (@raw.value.as(Array(String))) << value\nwhen Bool\n  (@raw.value.as(Array(Bool))) << value\nwhen Float64\n  (@raw.value.as(Array(Float64))) << value\nwhen Int64\n  (@raw.value.as(Array(Int64))) << value\nwhen Int32\n  (@raw.value.as(Array(Int32))) << value\nwhen Array(String)\n  (@raw.value.as(Array(String))).concat(value)\nwhen Array(Bool)\n  (@raw.value.as(Array(Bool))).concat(value)\nwhen Array(Float64)\n  (@raw.value.as(Array(Float64))).concat(value)\nwhen Array(Int64)\n  (@raw.value.as(Array(Int64))).concat(value)\nwhen Array(Int32)\n  (@raw.value.as(Array(Int32))).concat(value)\nelse\n  raise(ArgumentError.new(\"#{value} is not a valid type\"))\nend\n"}},{"html_id":"[](index)-instance-method","name":"[]","abstract":false,"args":[{"name":"index","external_name":"index","restriction":""}],"args_string":"(index)","args_html":"(index)","location":{"filename":"src/anyvalue.cr","line_number":86,"url":null},"def":{"name":"[]","args":[{"name":"index","external_name":"index","restriction":""}],"visibility":"Public","body":"case object = @raw.value\nwhen Array, String\n  object[index]\nelse\n  raise(\"Expected Attribute(Array) or Attribute(String) for #[](index : Int), not #{object.class}\")\nend"}},{"html_id":"[]=(index,value)-instance-method","name":"[]=","abstract":false,"args":[{"name":"index","external_name":"index","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(index, value)","args_html":"(index, value)","location":{"filename":"src/anyvalue.cr","line_number":104,"url":null},"def":{"name":"[]=","args":[{"name":"index","external_name":"index","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"case value\nwhen String\n  (@raw.value.as(Array(String)))[index] = value.as(String)\nwhen Bool\n  (@raw.value.as(Array(Bool)))[index] = value.as(Bool)\nwhen Float64\n  (@raw.value.as(Array(Float64)))[index] = value.as(Float64)\nwhen Int64\n  (@raw.value.as(Array(Int64)))[index] = value.as(Int64)\nwhen Int32\n  (@raw.value.as(Array(Int32)))[index] = value.as(Int32)\nelse\n  raise(\"Expected Attribute(Array) for #[]=(index : Int, value : ValueType), not #{@raw.value.class}\")\nend"}},{"html_id":"[]?(index)-instance-method","name":"[]?","abstract":false,"args":[{"name":"index","external_name":"index","restriction":""}],"args_string":"(index)","args_html":"(index)","location":{"filename":"src/anyvalue.cr","line_number":95,"url":null},"def":{"name":"[]?","args":[{"name":"index","external_name":"index","restriction":""}],"visibility":"Public","body":"case object = @raw.value\nwhen Array, String\n  object[index]?\nelse\n  raise(\"Expected Attribute(Array) or Attribute(String) for #[](index : Int), not #{object.class}\")\nend"}},{"html_id":"raw:AnyAttribute::Type-instance-method","name":"raw","abstract":false,"location":{"filename":"src/anyvalue.cr","line_number":3,"url":null},"def":{"name":"raw","return_type":"AnyAttribute::Type","visibility":"Public","body":"@raw"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/anyvalue.cr","line_number":125,"url":null},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":"value.to_json(json)"}},{"html_id":"to_json-instance-method","name":"to_json","abstract":false,"location":{"filename":"src/anyvalue.cr","line_number":121,"url":null},"def":{"name":"to_json","visibility":"Public","body":"value.to_json"}},{"html_id":"value-instance-method","name":"value","abstract":false,"location":{"filename":"src/anyvalue.cr","line_number":54,"url":null},"def":{"name":"value","visibility":"Public","body":"@raw.value"}},{"html_id":"value=(val)-instance-method","name":"value=","doc":"ameba:disable Metrics/CyclomaticComplexity","summary":"<p>ameba:disable Metrics/CyclomaticComplexity</p>","abstract":false,"args":[{"name":"val","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/anyvalue.cr","line_number":59,"url":null},"def":{"name":"value=","args":[{"name":"val","external_name":"val","restriction":""}],"visibility":"Public","body":"case val\nwhen String\n  @raw = Attribute(String).new(val)\nwhen Bool\n  @raw = Attribute(Bool).new(val)\nwhen Float64\n  @raw = Attribute(Float64).new(val)\nwhen Int64\n  @raw = Attribute(Int64).new(val)\nwhen Int32\n  @raw = Attribute(Int32).new(val)\nwhen Array(String)\n  @raw = Attribute(Array(String)).new(val)\nwhen Array(Bool)\n  @raw = Attribute(Array(Bool)).new(val)\nwhen Array(Float64)\n  @raw = Attribute(Array(Float64)).new(val)\nwhen Array(Int64)\n  @raw = Attribute(Array(Int64)).new(val)\nwhen Array(Int32)\n  @raw = Attribute(Array(Int32)).new(val)\nelse\n  raise(ArgumentError.new(\"#{val} is not a valid type\"))\nend"}}]},{"html_id":"opentelemetry-api/OpenTelemetry/API","path":"OpenTelemetry/API.html","kind":"module","full_name":"OpenTelemetry::API","name":"API","abstract":false,"locations":[{"filename":"src/api/abstract_context.cr","line_number":5,"url":null},{"filename":"src/api/abstract_event.cr","line_number":2,"url":null},{"filename":"src/api/abstract_id_generator.cr","line_number":4,"url":null},{"filename":"src/api/abstract_resource.cr","line_number":4,"url":null},{"filename":"src/api/abstract_span.cr","line_number":5,"url":null},{"filename":"src/api/abstract_span_context.cr","line_number":4,"url":null},{"filename":"src/api/abstract_status.cr","line_number":2,"url":null},{"filename":"src/api/abstract_text_map_propagator.cr","line_number":1,"url":null},{"filename":"src/api/context.cr","line_number":6,"url":null},{"filename":"src/api/context/abstract_key.cr","line_number":1,"url":null},{"filename":"src/api/context/key.cr","line_number":5,"url":null},{"filename":"src/api/event.cr","line_number":2,"url":null},{"filename":"src/api/id_generator.cr","line_number":4,"url":null},{"filename":"src/api/id_generator/abstract_base.cr","line_number":2,"url":null},{"filename":"src/api/id_generator/base.cr","line_number":4,"url":null},{"filename":"src/api/resource.cr","line_number":4,"url":null},{"filename":"src/api/span.cr","line_number":10,"url":null},{"filename":"src/api/span/abstract_kind.cr","line_number":4,"url":null},{"filename":"src/api/span/kind.cr","line_number":4,"url":null},{"filename":"src/api/span_context.cr","line_number":4,"url":null},{"filename":"src/api/span_context/abstract_config.cr","line_number":4,"url":null},{"filename":"src/api/span_context/config.cr","line_number":4,"url":null},{"filename":"src/api/status.cr","line_number":4,"url":null},{"filename":"src/api/text_map_propagator.cr","line_number":3,"url":null},{"filename":"src/api/trace_flags.cr","line_number":2,"url":null},{"filename":"src/api/version.cr","line_number":2,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.5.0\""}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry","kind":"module","full_name":"OpenTelemetry","name":"OpenTelemetry"},"types":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractContext","path":"OpenTelemetry/API/AbstractContext.html","kind":"struct","full_name":"OpenTelemetry::API::AbstractContext","name":"AbstractContext","abstract":true,"superclass":{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/abstract_context.cr","line_number":6,"url":null},{"filename":"src/api/context/abstract_key.cr","line_number":2,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"opentelemetry-api/OpenTelemetry/API/Context","kind":"struct","full_name":"OpenTelemetry::API::Context","name":"Context"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"class_methods":[{"html_id":"[](key)-class-method","name":"[]","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_context.cr","line_number":90,"url":null},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"raise(NotImplementedError.new(\"self.[] must be implemented in subclasses\"))"}},{"html_id":"[]=(key,value)-class-method","name":"[]=","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/abstract_context.cr","line_number":106,"url":null},"def":{"name":"[]=","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"raise(NotImplementedError.new(\"self.[]= must be implemented in subclasses\"))"}},{"html_id":"[]?(key)-class-method","name":"[]?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_context.cr","line_number":94,"url":null},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"raise(NotImplementedError.new(\"self.[]? must be implemented in subclasses\"))"}},{"html_id":"attach(context:Context)-class-method","name":"attach","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"Context"}],"args_string":"(context : Context)","args_html":"(context : <a href=\"../../OpenTelemetry/API/Context.html\">Context</a>)","location":{"filename":"src/api/abstract_context.cr","line_number":45,"url":null},"def":{"name":"attach","args":[{"name":"context","external_name":"context","restriction":"Context"}],"visibility":"Public","body":"raise(NotImplementedError.new(\"self.attach must be implemented in subclasses\"))"}},{"html_id":"attach(entries)-class-method","name":"attach","abstract":false,"args":[{"name":"entries","external_name":"entries","restriction":""}],"args_string":"(entries)","args_html":"(entries)","location":{"filename":"src/api/abstract_context.cr","line_number":49,"url":null},"def":{"name":"attach","args":[{"name":"entries","external_name":"entries","restriction":""}],"visibility":"Public","body":"raise(NotImplementedError.new(\"self.attach must be implemented in subclasses\"))"}},{"html_id":"clear-class-method","name":"clear","abstract":false,"location":{"filename":"src/api/abstract_context.cr","line_number":114,"url":null},"def":{"name":"clear","visibility":"Public","body":"raise(NotImplementedError.new(\"self.clear must be implemented in subclasses\"))"}},{"html_id":"create_key(name)-class-method","name":"create_key","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""}],"args_string":"(name)","args_html":"(name)","location":{"filename":"src/api/abstract_context.cr","line_number":25,"url":null},"def":{"name":"create_key","args":[{"name":"name","external_name":"name","restriction":""}],"visibility":"Public","body":"raise(NotImplementedError.new(\"self.create_key must be implemented in subclasses\"))"}},{"html_id":"create_key-class-method","name":"create_key","abstract":false,"location":{"filename":"src/api/abstract_context.cr","line_number":21,"url":null},"def":{"name":"create_key","visibility":"Public","body":"raise(NotImplementedError.new(\"self.create_key must be implemented in subclasses\"))"}},{"html_id":"current-class-method","name":"current","abstract":false,"location":{"filename":"src/api/abstract_context.cr","line_number":17,"url":null},"def":{"name":"current","visibility":"Public","body":"raise(NotImplementedError.new(\"self.current must be implemented in subclasses\"))"}},{"html_id":"detach(token)-class-method","name":"detach","doc":"Restores the previous Context associated with the current Fiber.\nThe supplied token is used to check if the call to detach is balanced\nwith a corresponding attach call. A warning is logged if the\ncalls are unbalanced.","summary":"<p>Restores the previous Context associated with the current Fiber.</p>","abstract":false,"args":[{"name":"token","external_name":"token","restriction":""}],"args_string":"(token)","args_html":"(token)","location":{"filename":"src/api/abstract_context.cr","line_number":41,"url":null},"def":{"name":"detach","args":[{"name":"token","external_name":"token","restriction":""}],"visibility":"Public","body":"raise(NotImplementedError.new(\"self.detach must be implemented in subclasses\"))"}},{"html_id":"set_value(key,value)-class-method","name":"set_value","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/abstract_context.cr","line_number":110,"url":null},"def":{"name":"set_value","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"raise(NotImplementedError.new(\"self.set_value must be implemented in subclasses\"))"}},{"html_id":"stack-class-method","name":"stack","abstract":false,"location":{"filename":"src/api/abstract_context.cr","line_number":13,"url":null},"def":{"name":"stack","visibility":"Public","body":"raise(NotImplementedError.new(\"self.stack must be implemented in subclasses\"))"}},{"html_id":"value(key)-class-method","name":"value","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_context.cr","line_number":98,"url":null},"def":{"name":"value","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"raise(NotImplementedError.new(\"self.value must be implemented in subclasses\"))"}},{"html_id":"value?(key)-class-method","name":"value?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_context.cr","line_number":102,"url":null},"def":{"name":"value?","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"raise(NotImplementedError.new(\"self.value? must be implemented in subclasses\"))"}},{"html_id":"with(key,values)-class-method","name":"with","doc":"Execute a block in a new context with key set to value. Restores the\nprevious context after the block executes.","summary":"<p>Execute a block in a new context with key set to value.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"values","external_name":"values","restriction":""}],"args_string":"(key, values)","args_html":"(key, values)","location":{"filename":"src/api/abstract_context.cr","line_number":86,"url":null},"def":{"name":"with","args":[{"name":"key","external_name":"key","restriction":""},{"name":"values","external_name":"values","restriction":""}],"visibility":"Public","body":"raise(NotImplementedError.new(\"self.with must be implemented in subclasses\"))"}},{"html_id":"with(context:Context)-class-method","name":"with","doc":"Executes a block with ctx as the current context. It restores\nthe previous context upon exiting.","summary":"<p>Executes a block with ctx as the current context.</p>","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"Context"}],"args_string":"(context : Context)","args_html":"(context : <a href=\"../../OpenTelemetry/API/Context.html\">Context</a>)","location":{"filename":"src/api/abstract_context.cr","line_number":55,"url":null},"def":{"name":"with","args":[{"name":"context","external_name":"context","restriction":"Context"}],"visibility":"Public","body":"raise(NotImplementedError.new(\"self.with must be implemented in subclasses\"))"}},{"html_id":"with(values)-class-method","name":"with","doc":"@param [String] key The lookup key\n@param [Hash] values Will be merged with values of the current context\n and returned in a new context\n@param [Callable] Block to execute in a new context\n@yield [context, values] Yields the newly created context and values\n  to the block","summary":"<p>@param [String] key The lookup key @param [Hash] values Will be merged with values of the current context  and returned in a new context @param [Callable] Block to execute in a new context @yield [context, values] Yields the newly created context and values   to the block</p>","abstract":false,"args":[{"name":"values","external_name":"values","restriction":""}],"args_string":"(values)","args_html":"(values)","location":{"filename":"src/api/abstract_context.cr","line_number":82,"url":null},"def":{"name":"with","args":[{"name":"values","external_name":"values","restriction":""}],"visibility":"Public","body":"raise(NotImplementedError.new(\"self.with must be implemented in subclasses\"))"}}],"constructors":[{"html_id":"new(entries:ContextContainer)-class-method","name":"new","abstract":false,"args":[{"name":"entries","external_name":"entries","restriction":"ContextContainer"}],"args_string":"(entries : ContextContainer)","args_html":"(entries : <a href=\"../../OpenTelemetry/API/AbstractContext/ContextContainer.html\">ContextContainer</a>)","location":{"filename":"src/api/abstract_context.cr","line_number":120,"url":null},"def":{"name":"new","args":[{"name":"entries","external_name":"entries","restriction":"ContextContainer"}],"visibility":"Public","body":"_ = allocate\n_.initialize(entries)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(entries)-class-method","name":"new","abstract":false,"args":[{"name":"entries","external_name":"entries","restriction":""}],"args_string":"(entries)","args_html":"(entries)","location":{"filename":"src/api/abstract_context.cr","line_number":122,"url":null},"def":{"name":"new","args":[{"name":"entries","external_name":"entries","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(entries)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/api/abstract_context.cr","line_number":118,"url":null},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](key)-instance-method","name":"[]","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_context.cr","line_number":128,"url":null},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]=(key,value)-instance-method","name":"[]=","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/abstract_context.cr","line_number":134,"url":null},"def":{"name":"[]=","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]?(key)-instance-method","name":"[]?","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_context.cr","line_number":130,"url":null},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"entries-instance-method","name":"entries","abstract":true,"location":{"filename":"src/api/abstract_context.cr","line_number":136,"url":null},"def":{"name":"entries","visibility":"Public","body":""}},{"html_id":"merge(other_entries)-instance-method","name":"merge","abstract":true,"args":[{"name":"other_entries","external_name":"other_entries","restriction":""}],"args_string":"(other_entries)","args_html":"(other_entries)","location":{"filename":"src/api/abstract_context.cr","line_number":138,"url":null},"def":{"name":"merge","args":[{"name":"other_entries","external_name":"other_entries","restriction":""}],"visibility":"Public","body":""}},{"html_id":"object_id-instance-method","name":"object_id","doc":"This is assumed to be implemented as a getter with\na default value of `CSUUID.unique`.","summary":"<p>This is assumed to be implemented as a getter with a default value of <code>CSUUID.unique</code>.</p>","abstract":true,"location":{"filename":"src/api/abstract_context.cr","line_number":11,"url":null},"def":{"name":"object_id","visibility":"Public","body":""}},{"html_id":"set_value(key,value)-instance-method","name":"set_value","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/abstract_context.cr","line_number":132,"url":null},"def":{"name":"set_value","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"value(key)-instance-method","name":"value","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_context.cr","line_number":124,"url":null},"def":{"name":"value","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"value?(key)-instance-method","name":"value?","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_context.cr","line_number":126,"url":null},"def":{"name":"value?","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}}],"types":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractContext/AbstractKey","path":"OpenTelemetry/API/AbstractContext/AbstractKey.html","kind":"struct","full_name":"OpenTelemetry::API::AbstractContext::AbstractKey","name":"AbstractKey","abstract":true,"superclass":{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/context/abstract_key.cr","line_number":3,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"opentelemetry-api/OpenTelemetry/API/Context/Key","kind":"struct","full_name":"OpenTelemetry::API::Context::Key","name":"Key"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractContext","kind":"struct","full_name":"OpenTelemetry::API::AbstractContext","name":"AbstractContext"},"constructors":[{"html_id":"new(name=CSUUID.unique.to_s,context=Context.current,id=CSUUID.unique)-class-method","name":"new","abstract":false,"args":[{"name":"name","default_value":"CSUUID.unique.to_s","external_name":"name","restriction":""},{"name":"context","default_value":"Context.current","external_name":"context","restriction":""},{"name":"id","default_value":"CSUUID.unique","external_name":"id","restriction":""}],"args_string":"(name = CSUUID.unique.to_s, context = Context.current, id = CSUUID.unique)","args_html":"(name = <span class=\"t\">CSUUID</span>.unique.to_s, context = <span class=\"t\">Context</span>.current, id = <span class=\"t\">CSUUID</span>.unique)","location":{"filename":"src/api/context/abstract_key.cr","line_number":8,"url":null},"def":{"name":"new","args":[{"name":"name","default_value":"CSUUID.unique.to_s","external_name":"name","restriction":""},{"name":"context","default_value":"Context.current","external_name":"context","restriction":""},{"name":"id","default_value":"CSUUID.unique","external_name":"id","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, context, id)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"<=>(other)-instance-method","name":"<=>","abstract":true,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/api/context/abstract_key.cr","line_number":14,"url":null},"def":{"name":"<=>","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":""}},{"html_id":"context:Context-instance-method","name":"context","abstract":true,"location":{"filename":"src/api/context/abstract_key.cr","line_number":6,"url":null},"def":{"name":"context","return_type":"Context","visibility":"Public","body":""}},{"html_id":"get(context=Context.current)-instance-method","name":"get","abstract":true,"args":[{"name":"context","default_value":"Context.current","external_name":"context","restriction":""}],"args_string":"(context = Context.current)","args_html":"(context = <span class=\"t\">Context</span>.current)","location":{"filename":"src/api/context/abstract_key.cr","line_number":12,"url":null},"def":{"name":"get","args":[{"name":"context","default_value":"Context.current","external_name":"context","restriction":""}],"visibility":"Public","body":""}},{"html_id":"id:CSUUID-instance-method","name":"id","abstract":true,"location":{"filename":"src/api/context/abstract_key.cr","line_number":5,"url":null},"def":{"name":"id","return_type":"CSUUID","visibility":"Public","body":""}},{"html_id":"name:String-instance-method","name":"name","abstract":true,"location":{"filename":"src/api/context/abstract_key.cr","line_number":4,"url":null},"def":{"name":"name","return_type":"String","visibility":"Public","body":""}},{"html_id":"value-instance-method","name":"value","abstract":true,"location":{"filename":"src/api/context/abstract_key.cr","line_number":10,"url":null},"def":{"name":"value","visibility":"Public","body":""}}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractContext/ContextContainer","path":"OpenTelemetry/API/AbstractContext/ContextContainer.html","kind":"alias","full_name":"OpenTelemetry::API::AbstractContext::ContextContainer","name":"ContextContainer","abstract":false,"locations":[{"filename":"src/api/abstract_context.cr","line_number":7,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":true,"aliased":"SplayTreeMap(String, String)","aliased_html":"SplayTreeMap(String, String)","const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractContext","kind":"struct","full_name":"OpenTelemetry::API::AbstractContext","name":"AbstractContext"}}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractEvent","path":"OpenTelemetry/API/AbstractEvent.html","kind":"class","full_name":"OpenTelemetry::API::AbstractEvent","name":"AbstractEvent","abstract":true,"superclass":{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/abstract_event.cr","line_number":3,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"opentelemetry-api/OpenTelemetry/API/Event","kind":"class","full_name":"OpenTelemetry::API::Event","name":"Event"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"constructors":[{"html_id":"new(name,attributes:Hash(String,AnyAttribute))-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"attributes","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"args_string":"(name, attributes : Hash(String, AnyAttribute))","args_html":"(name, attributes : Hash(String, <a href=\"../../OpenTelemetry/AnyAttribute.html\">AnyAttribute</a>))","location":{"filename":"src/api/abstract_event.cr","line_number":22,"url":null},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":""},{"name":"attributes","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, attributes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(name,attributes:Hash(String,_))-class-method","name":"new","doc":"This version converts the hash values to AnyAttributes.","summary":"<p>This version converts the hash values to AnyAttributes.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"attributes","external_name":"attributes","restriction":"Hash(String, _)"}],"args_string":"(name, attributes : Hash(String, _))","args_html":"(name, attributes : Hash(String, _))","location":{"filename":"src/api/abstract_event.cr","line_number":25,"url":null},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":""},{"name":"attributes","external_name":"attributes","restriction":"Hash(String, _)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, attributes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(name)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""}],"args_string":"(name)","args_html":"(name)","location":{"filename":"src/api/abstract_event.cr","line_number":18,"url":null},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(name=\"\",&)-class-method","name":"new","abstract":false,"args":[{"name":"name","default_value":"\"\"","external_name":"name","restriction":""}],"args_string":"(name = \"\", &)","args_html":"(name = <span class=\"s\">&quot;&quot;</span>, &)","location":{"filename":"src/api/abstract_event.cr","line_number":20,"url":null},"def":{"name":"new","args":[{"name":"name","default_value":"\"\"","external_name":"name","restriction":""}],"yields":1,"visibility":"Public","body":"_ = allocate\n_.initialize(name) do |_arg0|\n  yield _arg0\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](key)-instance-method","name":"[]","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_event.cr","line_number":33,"url":null},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]=(key,value)-instance-method","name":"[]=","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/abstract_event.cr","line_number":29,"url":null},"def":{"name":"[]=","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"attributes:Hash(String,AnyAttribute)-instance-method","name":"attributes","abstract":true,"location":{"filename":"src/api/abstract_event.cr","line_number":13,"url":null},"def":{"name":"attributes","return_type":"Hash(String, AnyAttribute)","visibility":"Public","body":""}},{"html_id":"attributes=(attr:Hash(String,_))-instance-method","name":"attributes=","abstract":true,"args":[{"name":"attr","external_name":"attr","restriction":"Hash(String, _)"}],"args_string":"(attr : Hash(String, _))","args_html":"(attr : Hash(String, _))","location":{"filename":"src/api/abstract_event.cr","line_number":27,"url":null},"def":{"name":"attributes=","args":[{"name":"attr","external_name":"attr","restriction":"Hash(String, _)"}],"visibility":"Public","body":""}},{"html_id":"get_attribute(key)-instance-method","name":"get_attribute","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_event.cr","line_number":35,"url":null},"def":{"name":"get_attribute","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"name:String-instance-method","name":"name","abstract":true,"location":{"filename":"src/api/abstract_event.cr","line_number":4,"url":null},"def":{"name":"name","return_type":"String","visibility":"Public","body":""}},{"html_id":"name=(name:String)-instance-method","name":"name=","abstract":true,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/api/abstract_event.cr","line_number":5,"url":null},"def":{"name":"name=","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":""}},{"html_id":"parent_span:Span?-instance-method","name":"parent_span","abstract":true,"location":{"filename":"src/api/abstract_event.cr","line_number":15,"url":null},"def":{"name":"parent_span","return_type":"Span | ::Nil","visibility":"Public","body":""}},{"html_id":"parent_span=(parent_span:Span?)-instance-method","name":"parent_span=","abstract":true,"args":[{"name":"parent_span","external_name":"parent_span","restriction":"Span | ::Nil"}],"args_string":"(parent_span : Span?)","args_html":"(parent_span : <a href=\"../../OpenTelemetry/API/Span.html\">Span</a>?)","location":{"filename":"src/api/abstract_event.cr","line_number":16,"url":null},"def":{"name":"parent_span=","args":[{"name":"parent_span","external_name":"parent_span","restriction":"Span | ::Nil"}],"visibility":"Public","body":""}},{"html_id":"set_attribute(key,value)-instance-method","name":"set_attribute","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/abstract_event.cr","line_number":31,"url":null},"def":{"name":"set_attribute","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"timestamp:Time::Span-instance-method","name":"timestamp","abstract":true,"location":{"filename":"src/api/abstract_event.cr","line_number":7,"url":null},"def":{"name":"timestamp","return_type":"Time::Span","visibility":"Public","body":""}},{"html_id":"timestamp=(timestamp:Time::Span)-instance-method","name":"timestamp=","abstract":true,"args":[{"name":"timestamp","external_name":"timestamp","restriction":"Time::Span"}],"args_string":"(timestamp : Time::Span)","args_html":"(timestamp : Time::Span)","location":{"filename":"src/api/abstract_event.cr","line_number":8,"url":null},"def":{"name":"timestamp=","args":[{"name":"timestamp","external_name":"timestamp","restriction":"Time::Span"}],"visibility":"Public","body":""}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":true,"args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/api/abstract_event.cr","line_number":41,"url":null},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":""}},{"html_id":"to_json-instance-method","name":"to_json","abstract":true,"location":{"filename":"src/api/abstract_event.cr","line_number":39,"url":null},"def":{"name":"to_json","visibility":"Public","body":""}},{"html_id":"to_protobuf-instance-method","name":"to_protobuf","abstract":true,"location":{"filename":"src/api/abstract_event.cr","line_number":37,"url":null},"def":{"name":"to_protobuf","visibility":"Public","body":""}},{"html_id":"wall_timestamp:Time-instance-method","name":"wall_timestamp","abstract":true,"location":{"filename":"src/api/abstract_event.cr","line_number":10,"url":null},"def":{"name":"wall_timestamp","return_type":"Time","visibility":"Public","body":""}},{"html_id":"wall_timestamp=(wall_timestamp:Time)-instance-method","name":"wall_timestamp=","abstract":true,"args":[{"name":"wall_timestamp","external_name":"wall_timestamp","restriction":"Time"}],"args_string":"(wall_timestamp : Time)","args_html":"(wall_timestamp : Time)","location":{"filename":"src/api/abstract_event.cr","line_number":11,"url":null},"def":{"name":"wall_timestamp=","args":[{"name":"wall_timestamp","external_name":"wall_timestamp","restriction":"Time"}],"visibility":"Public","body":""}}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractIdGenerator","path":"OpenTelemetry/API/AbstractIdGenerator.html","kind":"struct","full_name":"OpenTelemetry::API::AbstractIdGenerator","name":"AbstractIdGenerator","abstract":true,"superclass":{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/abstract_id_generator.cr","line_number":5,"url":null},{"filename":"src/api/id_generator/abstract_base.cr","line_number":5,"url":null},{"filename":"src/api/id_generator/base.cr","line_number":5,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"opentelemetry-api/OpenTelemetry/API/IdGenerator","kind":"struct","full_name":"OpenTelemetry::API::IdGenerator","name":"IdGenerator"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"doc":"This is the abstract base implementation for an ID Generator. Other ID Generators\nshould inherit from this class to implement the interface prescribed here.","summary":"<p>This is the abstract base implementation for an ID Generator.</p>","class_methods":[{"html_id":"span_id-class-method","name":"span_id","abstract":false,"location":{"filename":"src/api/abstract_id_generator.cr","line_number":18,"url":null},"def":{"name":"span_id","visibility":"Public","body":"generator.span_id"}},{"html_id":"trace_id-class-method","name":"trace_id","abstract":false,"location":{"filename":"src/api/abstract_id_generator.cr","line_number":14,"url":null},"def":{"name":"trace_id","visibility":"Public","body":"generator.trace_id"}}],"constructors":[{"html_id":"new(variant:String|Symbol=\"unique\")-class-method","name":"new","abstract":false,"args":[{"name":"variant","default_value":"\"unique\"","external_name":"variant","restriction":"String | Symbol"}],"args_string":"(variant : String | Symbol = \"unique\")","args_html":"(variant : String | Symbol = <span class=\"s\">&quot;unique&quot;</span>)","location":{"filename":"src/api/abstract_id_generator.cr","line_number":6,"url":null},"def":{"name":"new","args":[{"name":"variant","default_value":"\"unique\"","external_name":"variant","restriction":"String | Symbol"}],"visibility":"Public","body":"_ = allocate\n_.initialize(variant)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"generator:AbstractIdGenerator::AbstractBase-instance-method","name":"generator","abstract":true,"location":{"filename":"src/api/abstract_id_generator.cr","line_number":8,"url":null},"def":{"name":"generator","return_type":"AbstractIdGenerator::AbstractBase","visibility":"Public","body":""}},{"html_id":"span_id-instance-method","name":"span_id","abstract":true,"location":{"filename":"src/api/abstract_id_generator.cr","line_number":12,"url":null},"def":{"name":"span_id","visibility":"Public","body":""}},{"html_id":"trace_id-instance-method","name":"trace_id","abstract":true,"location":{"filename":"src/api/abstract_id_generator.cr","line_number":10,"url":null},"def":{"name":"trace_id","visibility":"Public","body":""}}],"types":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractIdGenerator/AbstractBase","path":"OpenTelemetry/API/AbstractIdGenerator/AbstractBase.html","kind":"struct","full_name":"OpenTelemetry::API::AbstractIdGenerator::AbstractBase","name":"AbstractBase","abstract":true,"superclass":{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/id_generator/abstract_base.cr","line_number":6,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractIdGenerator/Base","kind":"struct","full_name":"OpenTelemetry::API::AbstractIdGenerator::Base","name":"Base"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractIdGenerator","kind":"struct","full_name":"OpenTelemetry::API::AbstractIdGenerator","name":"AbstractIdGenerator"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/api/id_generator/abstract_base.cr","line_number":6,"url":null},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src/api/id_generator/abstract_base.cr","line_number":6,"url":null},"def":{"name":"initialize","visibility":"Public","body":""}},{"html_id":"span_id-instance-method","name":"span_id","doc":"This method will return an ID suitable for use as a Span ID. The standard offered\nin the open telemetry spec is 64 bits (8 bytes). This is not a hard requirement,\nhowever, so subclass implementations can return a different length.","summary":"<p>This method will return an ID suitable for use as a Span ID.</p>","abstract":true,"location":{"filename":"src/api/id_generator/abstract_base.cr","line_number":15,"url":null},"def":{"name":"span_id","visibility":"Public","body":""}},{"html_id":"trace_id-instance-method","name":"trace_id","doc":"This method will return an ID suitable for use as a Trace ID. The standard offered\nin the open telemetry spec is 128 bits (16 bytes). This is not a hard requirement,\nhowever, so subclass implementations can return a different length.","summary":"<p>This method will return an ID suitable for use as a Trace ID.</p>","abstract":true,"location":{"filename":"src/api/id_generator/abstract_base.cr","line_number":10,"url":null},"def":{"name":"trace_id","visibility":"Public","body":""}}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractIdGenerator/Base","path":"OpenTelemetry/API/AbstractIdGenerator/Base.html","kind":"struct","full_name":"OpenTelemetry::API::AbstractIdGenerator::Base","name":"Base","abstract":false,"superclass":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractIdGenerator/AbstractBase","kind":"struct","full_name":"OpenTelemetry::API::AbstractIdGenerator::AbstractBase","name":"AbstractBase"},"ancestors":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractIdGenerator/AbstractBase","kind":"struct","full_name":"OpenTelemetry::API::AbstractIdGenerator::AbstractBase","name":"AbstractBase"},{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/id_generator/base.cr","line_number":6,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractIdGenerator","kind":"struct","full_name":"OpenTelemetry::API::AbstractIdGenerator","name":"AbstractIdGenerator"},"instance_methods":[{"html_id":"span_id-instance-method","name":"span_id","doc":"This method will return an ID suitable for use as a Span ID. The standard offered\nin the open telemetry spec is 64 bits (8 bytes). This is not a hard requirement,\nhowever, so subclass implementations can return a different length.","summary":"<p>This method will return an ID suitable for use as a Span ID.</p>","abstract":false,"location":{"filename":"src/api/id_generator/base.cr","line_number":10,"url":null},"def":{"name":"span_id","visibility":"Public","body":""}},{"html_id":"trace_id-instance-method","name":"trace_id","doc":"This method will return an ID suitable for use as a Trace ID. The standard offered\nin the open telemetry spec is 128 bits (16 bytes). This is not a hard requirement,\nhowever, so subclass implementations can return a different length.","summary":"<p>This method will return an ID suitable for use as a Trace ID.</p>","abstract":false,"location":{"filename":"src/api/id_generator/base.cr","line_number":7,"url":null},"def":{"name":"trace_id","visibility":"Public","body":""}}]}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractResource","path":"OpenTelemetry/API/AbstractResource.html","kind":"class","full_name":"OpenTelemetry::API::AbstractResource","name":"AbstractResource","abstract":true,"superclass":{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"opentelemetry-api/OpenTelemetry/Sendable","kind":"module","full_name":"OpenTelemetry::Sendable","name":"Sendable"},{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/abstract_resource.cr","line_number":5,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"opentelemetry-api/OpenTelemetry/Sendable","kind":"module","full_name":"OpenTelemetry::Sendable","name":"Sendable"}],"subclasses":[{"html_id":"opentelemetry-api/OpenTelemetry/API/Resource","kind":"class","full_name":"OpenTelemetry::API::Resource","name":"Resource"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"constructors":[{"html_id":"new(attrs)-class-method","name":"new","doc":"Create a new Resource that has been intialized by the provided key/value pairs.\nThis initialization will support any seed object that provides an `#each` method\nwhich takes a two-argument block.","summary":"<p>Create a new Resource that has been intialized by the provided key/value pairs.</p>","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":""}],"args_string":"(attrs)","args_html":"(attrs)","location":{"filename":"src/api/abstract_resource.cr","line_number":19,"url":null},"def":{"name":"new","args":[{"name":"attrs","external_name":"attrs","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(attrs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new-class-method","name":"new","doc":"Create an empty Resource.","summary":"<p>Create an empty Resource.</p>","abstract":false,"location":{"filename":"src/api/abstract_resource.cr","line_number":22,"url":null},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](key)-instance-method","name":"[]","doc":"Retrieve the value for a key in the Resource.","summary":"<p>Retrieve the value for a key in the Resource.</p>","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_resource.cr","line_number":31,"url":null},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]=(key,value)-instance-method","name":"[]=","doc":"Assign a value to a key in the Resource.","summary":"<p>Assign a value to a key in the Resource.</p>","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/abstract_resource.cr","line_number":25,"url":null},"def":{"name":"[]=","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]?(key)-instance-method","name":"[]?","doc":"Retrieve a value for a key in the Resource. Return nil instead of an exception if the key is not present.","summary":"<p>Retrieve a value for a key in the Resource.</p>","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_resource.cr","line_number":37,"url":null},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"attributes-instance-method","name":"attributes","abstract":true,"location":{"filename":"src/api/abstract_resource.cr","line_number":8,"url":null},"def":{"name":"attributes","visibility":"Public","body":""}},{"html_id":"attributes=(attributes:Hash(String,AnyAttribute))-instance-method","name":"attributes=","abstract":true,"args":[{"name":"attributes","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"args_string":"(attributes : Hash(String, AnyAttribute))","args_html":"(attributes : Hash(String, <a href=\"../../OpenTelemetry/AnyAttribute.html\">AnyAttribute</a>))","location":{"filename":"src/api/abstract_resource.cr","line_number":9,"url":null},"def":{"name":"attributes=","args":[{"name":"attributes","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"visibility":"Public","body":""}},{"html_id":"dropped_attribute_count-instance-method","name":"dropped_attribute_count","abstract":true,"location":{"filename":"src/api/abstract_resource.cr","line_number":11,"url":null},"def":{"name":"dropped_attribute_count","visibility":"Public","body":""}},{"html_id":"dropped_attribute_count=(dropped_attribute_count:UInt32)-instance-method","name":"dropped_attribute_count=","abstract":true,"args":[{"name":"dropped_attribute_count","external_name":"dropped_attribute_count","restriction":"UInt32"}],"args_string":"(dropped_attribute_count : UInt32)","args_html":"(dropped_attribute_count : UInt32)","location":{"filename":"src/api/abstract_resource.cr","line_number":12,"url":null},"def":{"name":"dropped_attribute_count=","args":[{"name":"dropped_attribute_count","external_name":"dropped_attribute_count","restriction":"UInt32"}],"visibility":"Public","body":""}},{"html_id":"empty?-instance-method","name":"empty?","doc":"Return true if the resource is empty.","summary":"<p>Return true if the resource is empty.</p>","abstract":true,"location":{"filename":"src/api/abstract_resource.cr","line_number":43,"url":null},"def":{"name":"empty?","visibility":"Public","body":""}},{"html_id":"get_attribute(key)-instance-method","name":"get_attribute","doc":"Alias for `#[]`","summary":"<p>Alias for <code><a href=\"../../OpenTelemetry/API/AbstractResource.html#%5B%5D%28key%29-instance-method\">#[]</a></code></p>","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_resource.cr","line_number":34,"url":null},"def":{"name":"get_attribute","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"get_attribute?(key)-instance-method","name":"get_attribute?","doc":"Alias for `#[]?`","summary":"<p>Alias for <code><a href=\"../../OpenTelemetry/API/AbstractResource.html#%5B%5D%3F%28key%29-instance-method\">#[]?</a></code></p>","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_resource.cr","line_number":40,"url":null},"def":{"name":"get_attribute?","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"set_attribute(key,value)-instance-method","name":"set_attribute","doc":"Alias for `#[]=`","summary":"<p>Alias for <code><a href=\"../../OpenTelemetry/API/AbstractResource.html#%5B%5D%3D%28key%2Cvalue%29-instance-method\">#[]=</a></code></p>","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/abstract_resource.cr","line_number":28,"url":null},"def":{"name":"set_attribute","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":true,"args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/api/abstract_resource.cr","line_number":51,"url":null},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":""}},{"html_id":"to_json-instance-method","name":"to_json","doc":"Export the resource with a JSON representation.","summary":"<p>Export the resource with a JSON representation.</p>","abstract":true,"location":{"filename":"src/api/abstract_resource.cr","line_number":49,"url":null},"def":{"name":"to_json","visibility":"Public","body":""}},{"html_id":"to_protobuf-instance-method","name":"to_protobuf","doc":"Export the resource to its protocol buffer representation.","summary":"<p>Export the resource to its protocol buffer representation.</p>","abstract":true,"location":{"filename":"src/api/abstract_resource.cr","line_number":46,"url":null},"def":{"name":"to_protobuf","visibility":"Public","body":""}}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractSpan","path":"OpenTelemetry/API/AbstractSpan.html","kind":"class","full_name":"OpenTelemetry::API::AbstractSpan","name":"AbstractSpan","abstract":true,"superclass":{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"opentelemetry-api/OpenTelemetry/Sendable","kind":"module","full_name":"OpenTelemetry::Sendable","name":"Sendable"},{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/abstract_span.cr","line_number":8,"url":null},{"filename":"src/api/span/abstract_kind.cr","line_number":5,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MATCH","name":"MATCH","value":"/(?<span_id>[A-Fa-f0-9]{16})/"}],"included_modules":[{"html_id":"opentelemetry-api/OpenTelemetry/Sendable","kind":"module","full_name":"OpenTelemetry::Sendable","name":"Sendable"}],"subclasses":[{"html_id":"opentelemetry-api/OpenTelemetry/API/Span","kind":"class","full_name":"OpenTelemetry::API::Span","name":"Span"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"doc":"A `Span` represents a single measured timespan, and all data associated\nwith that measurement. A `Span` may nest other `Span` instances.","summary":"<p>A <code><a href=\"../../OpenTelemetry/API/Span.html\">Span</a></code> represents a single measured timespan, and all data associated with that measurement.</p>","class_methods":[{"html_id":"build(name=\"\",&)-class-method","name":"build","abstract":false,"args":[{"name":"name","default_value":"\"\"","external_name":"name","restriction":""}],"args_string":"(name = \"\", &)","args_html":"(name = <span class=\"s\">&quot;&quot;</span>, &)","location":{"filename":"src/api/abstract_span.cr","line_number":21,"url":null},"def":{"name":"build","args":[{"name":"name","default_value":"\"\"","external_name":"name","restriction":""}],"yields":1,"visibility":"Public","body":"span = new(name)\nyield span\nspan\n"}},{"html_id":"validate_id(id:Slice(UInt8))-class-method","name":"validate_id","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"Slice(UInt8)"}],"args_string":"(id : Slice(UInt8))","args_html":"(id : Slice(UInt8))","location":{"filename":"src/api/abstract_span.cr","line_number":13,"url":null},"def":{"name":"validate_id","args":[{"name":"id","external_name":"id","restriction":"Slice(UInt8)"}],"visibility":"Public","body":""}},{"html_id":"validate_id(id:Slice)-class-method","name":"validate_id","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"Slice"}],"args_string":"(id : Slice)","args_html":"(id : Slice)","location":{"filename":"src/api/abstract_span.cr","line_number":17,"url":null},"def":{"name":"validate_id","args":[{"name":"id","external_name":"id","restriction":"Slice"}],"visibility":"Public","body":""}}],"constructors":[{"html_id":"new(name=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"name","default_value":"\"\"","external_name":"name","restriction":""}],"args_string":"(name = \"\")","args_html":"(name = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/api/abstract_span.cr","line_number":28,"url":null},"def":{"name":"new","args":[{"name":"name","default_value":"\"\"","external_name":"name","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](key)-instance-method","name":"[]","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_span.cr","line_number":88,"url":null},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]=(key,value)-instance-method","name":"[]=","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/abstract_span.cr","line_number":84,"url":null},"def":{"name":"[]=","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"add_event(name,attributes:Hash(String,AnyAttribute)={}ofString=>AnyAttribute)-instance-method","name":"add_event","abstract":true,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"attributes","default_value":"{} of String => AnyAttribute","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"args_string":"(name, attributes : Hash(String, AnyAttribute) = {} of String => AnyAttribute)","args_html":"(name, attributes : Hash(String, <a href=\"../../OpenTelemetry/AnyAttribute.html\">AnyAttribute</a>) = {} <span class=\"k\">of</span> <span class=\"t\">String</span> =&gt; <span class=\"t\">AnyAttribute</span>)","location":{"filename":"src/api/abstract_span.cr","line_number":96,"url":null},"def":{"name":"add_event","args":[{"name":"name","external_name":"name","restriction":""},{"name":"attributes","default_value":"{} of String => AnyAttribute","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"visibility":"Public","body":""}},{"html_id":"add_event(name=\"\",&blk:Event->)-instance-method","name":"add_event","abstract":true,"args":[{"name":"name","default_value":"\"\"","external_name":"name","restriction":""}],"args_string":"(name = \"\", &blk : Event -> )","args_html":"(name = <span class=\"s\">&quot;&quot;</span>, &blk : <a href=\"../../OpenTelemetry/API/Event.html\">Event</a> -> )","location":{"filename":"src/api/abstract_span.cr","line_number":94,"url":null},"def":{"name":"add_event","args":[{"name":"name","default_value":"\"\"","external_name":"name","restriction":""}],"yields":1,"block_arg":{"name":"blk","external_name":"blk","restriction":"(Event ->)"},"visibility":"Public","body":""}},{"html_id":"attributes:Hash(String,AnyAttribute)-instance-method","name":"attributes","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":55,"url":null},"def":{"name":"attributes","return_type":"Hash(String, AnyAttribute)","visibility":"Public","body":""}},{"html_id":"attributes=(attributes:Hash(String,AnyAttribute))-instance-method","name":"attributes=","abstract":true,"args":[{"name":"attributes","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"args_string":"(attributes : Hash(String, AnyAttribute))","args_html":"(attributes : Hash(String, <a href=\"../../OpenTelemetry/AnyAttribute.html\">AnyAttribute</a>))","location":{"filename":"src/api/abstract_span.cr","line_number":56,"url":null},"def":{"name":"attributes=","args":[{"name":"attributes","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"visibility":"Public","body":""}},{"html_id":"can_export?-instance-method","name":"can_export?","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":102,"url":null},"def":{"name":"can_export?","visibility":"Public","body":""}},{"html_id":"children:Array(Span)-instance-method","name":"children","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":63,"url":null},"def":{"name":"children","return_type":"Array(Span)","visibility":"Public","body":""}},{"html_id":"children=(children:Array(Span))-instance-method","name":"children=","abstract":true,"args":[{"name":"children","external_name":"children","restriction":"Array(Span)"}],"args_string":"(children : Array(Span))","args_html":"(children : Array(<a href=\"../../OpenTelemetry/API/Span.html\">Span</a>))","location":{"filename":"src/api/abstract_span.cr","line_number":64,"url":null},"def":{"name":"children=","args":[{"name":"children","external_name":"children","restriction":"Array(Span)"}],"visibility":"Public","body":""}},{"html_id":"context:SpanContext-instance-method","name":"context","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":67,"url":null},"def":{"name":"context","return_type":"SpanContext","visibility":"Public","body":""}},{"html_id":"context=(context:SpanContext)-instance-method","name":"context=","abstract":true,"args":[{"name":"context","external_name":"context","restriction":"SpanContext"}],"args_string":"(context : SpanContext)","args_html":"(context : <a href=\"../../OpenTelemetry/API/SpanContext.html\">SpanContext</a>)","location":{"filename":"src/api/abstract_span.cr","line_number":68,"url":null},"def":{"name":"context=","args":[{"name":"context","external_name":"context","restriction":"SpanContext"}],"visibility":"Public","body":""}},{"html_id":"events:Array(Event)-instance-method","name":"events","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":51,"url":null},"def":{"name":"events","return_type":"Array(Event)","visibility":"Public","body":""}},{"html_id":"events=(events:Array(Event))-instance-method","name":"events=","abstract":true,"args":[{"name":"events","external_name":"events","restriction":"Array(Event)"}],"args_string":"(events : Array(Event))","args_html":"(events : Array(<a href=\"../../OpenTelemetry/API/Event.html\">Event</a>))","location":{"filename":"src/api/abstract_span.cr","line_number":52,"url":null},"def":{"name":"events=","args":[{"name":"events","external_name":"events","restriction":"Array(Event)"}],"visibility":"Public","body":""}},{"html_id":"finish:Time::Span?-instance-method","name":"finish","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":43,"url":null},"def":{"name":"finish","return_type":"Time::Span | ::Nil","visibility":"Public","body":""}},{"html_id":"finish=(finish:Time::Span?)-instance-method","name":"finish=","abstract":true,"args":[{"name":"finish","external_name":"finish","restriction":"Time::Span | ::Nil"}],"args_string":"(finish : Time::Span?)","args_html":"(finish : Time::Span?)","location":{"filename":"src/api/abstract_span.cr","line_number":44,"url":null},"def":{"name":"finish=","args":[{"name":"finish","external_name":"finish","restriction":"Time::Span | ::Nil"}],"visibility":"Public","body":""}},{"html_id":"get_attribute(key)-instance-method","name":"get_attribute","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/abstract_span.cr","line_number":90,"url":null},"def":{"name":"get_attribute","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"id-instance-method","name":"id","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":98,"url":null},"def":{"name":"id","visibility":"Public","body":""}},{"html_id":"is_recording:Bool-instance-method","name":"is_recording","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":79,"url":null},"def":{"name":"is_recording","return_type":"Bool","visibility":"Public","body":""}},{"html_id":"is_recording=(is_recording:Bool)-instance-method","name":"is_recording=","abstract":true,"args":[{"name":"is_recording","external_name":"is_recording","restriction":"Bool"}],"args_string":"(is_recording : Bool)","args_html":"(is_recording : Bool)","location":{"filename":"src/api/abstract_span.cr","line_number":80,"url":null},"def":{"name":"is_recording=","args":[{"name":"is_recording","external_name":"is_recording","restriction":"Bool"}],"visibility":"Public","body":""}},{"html_id":"kind:Kind-instance-method","name":"kind","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":71,"url":null},"def":{"name":"kind","return_type":"Kind","visibility":"Public","body":""}},{"html_id":"kind=(kind:Kind)-instance-method","name":"kind=","abstract":true,"args":[{"name":"kind","external_name":"kind","restriction":"Kind"}],"args_string":"(kind : Kind)","args_html":"(kind : <a href=\"../../OpenTelemetry/API/AbstractSpan/Kind.html\">Kind</a>)","location":{"filename":"src/api/abstract_span.cr","line_number":72,"url":null},"def":{"name":"kind=","args":[{"name":"kind","external_name":"kind","restriction":"Kind"}],"visibility":"Public","body":""}},{"html_id":"name:String-instance-method","name":"name","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":31,"url":null},"def":{"name":"name","return_type":"String","visibility":"Public","body":""}},{"html_id":"name=(name:String)-instance-method","name":"name=","abstract":true,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/api/abstract_span.cr","line_number":32,"url":null},"def":{"name":"name=","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":""}},{"html_id":"parent:Span?-instance-method","name":"parent","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":59,"url":null},"def":{"name":"parent","return_type":"Span | ::Nil","visibility":"Public","body":""}},{"html_id":"parent=(parent:Span?)-instance-method","name":"parent=","abstract":true,"args":[{"name":"parent","external_name":"parent","restriction":"Span | ::Nil"}],"args_string":"(parent : Span?)","args_html":"(parent : <a href=\"../../OpenTelemetry/API/Span.html\">Span</a>?)","location":{"filename":"src/api/abstract_span.cr","line_number":60,"url":null},"def":{"name":"parent=","args":[{"name":"parent","external_name":"parent","restriction":"Span | ::Nil"}],"visibility":"Public","body":""}},{"html_id":"recording?-instance-method","name":"recording?","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":82,"url":null},"def":{"name":"recording?","visibility":"Public","body":""}},{"html_id":"set_attribute(key,value)-instance-method","name":"set_attribute","abstract":true,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/abstract_span.cr","line_number":86,"url":null},"def":{"name":"set_attribute","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"span_id-instance-method","name":"span_id","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":100,"url":null},"def":{"name":"span_id","visibility":"Public","body":""}},{"html_id":"start:Time::Span-instance-method","name":"start","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":35,"url":null},"def":{"name":"start","return_type":"Time::Span","visibility":"Public","body":""}},{"html_id":"start=(start:Time::Span)-instance-method","name":"start=","abstract":true,"args":[{"name":"start","external_name":"start","restriction":"Time::Span"}],"args_string":"(start : Time::Span)","args_html":"(start : Time::Span)","location":{"filename":"src/api/abstract_span.cr","line_number":36,"url":null},"def":{"name":"start=","args":[{"name":"start","external_name":"start","restriction":"Time::Span"}],"visibility":"Public","body":""}},{"html_id":"status:Status-instance-method","name":"status","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":75,"url":null},"def":{"name":"status","return_type":"Status","visibility":"Public","body":""}},{"html_id":"status=(status:Status)-instance-method","name":"status=","abstract":true,"args":[{"name":"status","external_name":"status","restriction":"Status"}],"args_string":"(status : Status)","args_html":"(status : <a href=\"../../OpenTelemetry/API/Status.html\">Status</a>)","location":{"filename":"src/api/abstract_span.cr","line_number":76,"url":null},"def":{"name":"status=","args":[{"name":"status","external_name":"status","restriction":"Status"}],"visibility":"Public","body":""}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":true,"args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/api/abstract_span.cr","line_number":109,"url":null},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":""}},{"html_id":"to_json-instance-method","name":"to_json","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":107,"url":null},"def":{"name":"to_json","visibility":"Public","body":""}},{"html_id":"to_protobuf-instance-method","name":"to_protobuf","doc":"Return the Protobuf object for the Span.","summary":"<p>Return the Protobuf object for the Span.</p>","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":105,"url":null},"def":{"name":"to_protobuf","visibility":"Public","body":""}},{"html_id":"wall_finish:Time?-instance-method","name":"wall_finish","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":47,"url":null},"def":{"name":"wall_finish","return_type":"Time | ::Nil","visibility":"Public","body":""}},{"html_id":"wall_finish=(wall_finish:Time?)-instance-method","name":"wall_finish=","abstract":true,"args":[{"name":"wall_finish","external_name":"wall_finish","restriction":"Time | ::Nil"}],"args_string":"(wall_finish : Time?)","args_html":"(wall_finish : Time?)","location":{"filename":"src/api/abstract_span.cr","line_number":48,"url":null},"def":{"name":"wall_finish=","args":[{"name":"wall_finish","external_name":"wall_finish","restriction":"Time | ::Nil"}],"visibility":"Public","body":""}},{"html_id":"wall_start:Time-instance-method","name":"wall_start","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span.cr","line_number":39,"url":null},"def":{"name":"wall_start","return_type":"Time","visibility":"Public","body":""}},{"html_id":"wall_start=(wall_start:Time)-instance-method","name":"wall_start=","abstract":true,"args":[{"name":"wall_start","external_name":"wall_start","restriction":"Time"}],"args_string":"(wall_start : Time)","args_html":"(wall_start : Time)","location":{"filename":"src/api/abstract_span.cr","line_number":40,"url":null},"def":{"name":"wall_start=","args":[{"name":"wall_start","external_name":"wall_start","restriction":"Time"}],"visibility":"Public","body":""}}],"types":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractSpan/Kind","path":"OpenTelemetry/API/AbstractSpan/Kind.html","kind":"enum","full_name":"OpenTelemetry::API::AbstractSpan::Kind","name":"Kind","abstract":false,"ancestors":[{"html_id":"opentelemetry-api/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"opentelemetry-api/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/span/abstract_kind.cr","line_number":6,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Unspecified","name":"Unspecified","value":"0"},{"id":"Internal","name":"Internal","value":"1"},{"id":"Server","name":"Server","value":"2"},{"id":"Client","name":"Client","value":"3"},{"id":"Producer","name":"Producer","value":"4"},{"id":"Consumer","name":"Consumer","value":"5"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractSpan","kind":"class","full_name":"OpenTelemetry::API::AbstractSpan","name":"AbstractSpan"},"instance_methods":[{"html_id":"client?-instance-method","name":"client?","abstract":false,"location":{"filename":"src/api/span/abstract_kind.cr","line_number":10,"url":null},"def":{"name":"client?","visibility":"Public","body":"self == Client"}},{"html_id":"consumer?-instance-method","name":"consumer?","abstract":false,"location":{"filename":"src/api/span/abstract_kind.cr","line_number":12,"url":null},"def":{"name":"consumer?","visibility":"Public","body":"self == Consumer"}},{"html_id":"internal?-instance-method","name":"internal?","abstract":false,"location":{"filename":"src/api/span/abstract_kind.cr","line_number":8,"url":null},"def":{"name":"internal?","visibility":"Public","body":"self == Internal"}},{"html_id":"producer?-instance-method","name":"producer?","abstract":false,"location":{"filename":"src/api/span/abstract_kind.cr","line_number":11,"url":null},"def":{"name":"producer?","visibility":"Public","body":"self == Producer"}},{"html_id":"server?-instance-method","name":"server?","abstract":false,"location":{"filename":"src/api/span/abstract_kind.cr","line_number":9,"url":null},"def":{"name":"server?","visibility":"Public","body":"self == Server"}},{"html_id":"unspecified?-instance-method","name":"unspecified?","abstract":false,"location":{"filename":"src/api/span/abstract_kind.cr","line_number":7,"url":null},"def":{"name":"unspecified?","visibility":"Public","body":"self == Unspecified"}}]}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractSpanContext","path":"OpenTelemetry/API/AbstractSpanContext.html","kind":"struct","full_name":"OpenTelemetry::API::AbstractSpanContext","name":"AbstractSpanContext","abstract":true,"superclass":{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/abstract_span_context.cr","line_number":5,"url":null},{"filename":"src/api/span_context/abstract_config.cr","line_number":5,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"opentelemetry-api/OpenTelemetry/API/SpanContext","kind":"struct","full_name":"OpenTelemetry::API::SpanContext","name":"SpanContext"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"class_methods":[{"html_id":"build(inherited_context:SpanContext?=nil)-class-method","name":"build","abstract":false,"args":[{"name":"inherited_context","default_value":"nil","external_name":"inherited_context","restriction":"SpanContext | ::Nil"}],"args_string":"(inherited_context : SpanContext? = nil)","args_html":"(inherited_context : <a href=\"../../OpenTelemetry/API/SpanContext.html\">SpanContext</a>? = <span class=\"n\">nil</span>)","location":{"filename":"src/api/abstract_span_context.cr","line_number":57,"url":null},"def":{"name":"build","args":[{"name":"inherited_context","default_value":"nil","external_name":"inherited_context","restriction":"SpanContext | ::Nil"}],"visibility":"Public","body":""}}],"constructors":[{"html_id":"new(trace_id,span_id,parent_id,trace_flags,trace_state,remote=false)-class-method","name":"new","abstract":false,"args":[{"name":"trace_id","external_name":"trace_id","restriction":""},{"name":"span_id","external_name":"span_id","restriction":""},{"name":"parent_id","external_name":"parent_id","restriction":""},{"name":"trace_flags","external_name":"trace_flags","restriction":""},{"name":"trace_state","external_name":"trace_state","restriction":""},{"name":"remote","default_value":"false","external_name":"remote","restriction":""}],"args_string":"(trace_id, span_id, parent_id, trace_flags, trace_state, remote = false)","args_html":"(trace_id, span_id, parent_id, trace_flags, trace_state, remote = <span class=\"n\">false</span>)","location":{"filename":"src/api/abstract_span_context.cr","line_number":8,"url":null},"def":{"name":"new","args":[{"name":"trace_id","external_name":"trace_id","restriction":""},{"name":"span_id","external_name":"span_id","restriction":""},{"name":"parent_id","external_name":"parent_id","restriction":""},{"name":"trace_flags","external_name":"trace_flags","restriction":""},{"name":"trace_state","external_name":"trace_state","restriction":""},{"name":"remote","default_value":"false","external_name":"remote","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(trace_id, span_id, parent_id, trace_flags, trace_state, remote)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(inherited_context:SpanContext)-class-method","name":"new","abstract":false,"args":[{"name":"inherited_context","external_name":"inherited_context","restriction":"SpanContext"}],"args_string":"(inherited_context : SpanContext)","args_html":"(inherited_context : <a href=\"../../OpenTelemetry/API/SpanContext.html\">SpanContext</a>)","location":{"filename":"src/api/abstract_span_context.cr","line_number":10,"url":null},"def":{"name":"new","args":[{"name":"inherited_context","external_name":"inherited_context","restriction":"SpanContext"}],"visibility":"Public","body":"_ = allocate\n_.initialize(inherited_context)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(configuration:Config)-class-method","name":"new","abstract":false,"args":[{"name":"configuration","external_name":"configuration","restriction":"Config"}],"args_string":"(configuration : Config)","args_html":"(configuration : Config)","location":{"filename":"src/api/abstract_span_context.cr","line_number":12,"url":null},"def":{"name":"new","args":[{"name":"configuration","external_name":"configuration","restriction":"Config"}],"visibility":"Public","body":"_ = allocate\n_.initialize(configuration)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/api/abstract_span_context.cr","line_number":6,"url":null},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](val)-instance-method","name":"[]","abstract":true,"args":[{"name":"val","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/api/abstract_span_context.cr","line_number":51,"url":null},"def":{"name":"[]","args":[{"name":"val","external_name":"val","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]=(val,val2)-instance-method","name":"[]=","abstract":true,"args":[{"name":"val","external_name":"val","restriction":""},{"name":"val2","external_name":"val2","restriction":""}],"args_string":"(val, val2)","args_html":"(val, val2)","location":{"filename":"src/api/abstract_span_context.cr","line_number":55,"url":null},"def":{"name":"[]=","args":[{"name":"val","external_name":"val","restriction":""},{"name":"val2","external_name":"val2","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]?(val)-instance-method","name":"[]?","abstract":true,"args":[{"name":"val","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/api/abstract_span_context.cr","line_number":53,"url":null},"def":{"name":"[]?","args":[{"name":"val","external_name":"val","restriction":""}],"visibility":"Public","body":""}},{"html_id":"is_remote-instance-method","name":"is_remote","doc":"The spec dictates that this name be available: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#isvalid","summary":"<p>The spec dictates that this name be available: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#isvalid</p>","abstract":true,"location":{"filename":"src/api/abstract_span_context.cr","line_number":49,"url":null},"def":{"name":"is_remote","visibility":"Public","body":""}},{"html_id":"is_valid-instance-method","name":"is_valid","doc":"The spec dictates that this name be available: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#isvalid","summary":"<p>The spec dictates that this name be available: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#isvalid</p>","abstract":true,"location":{"filename":"src/api/abstract_span_context.cr","line_number":44,"url":null},"def":{"name":"is_valid","visibility":"Public","body":""}},{"html_id":"parent_id:Slice(UInt8)?-instance-method","name":"parent_id","doc":"This is probably going to be a property","summary":"<p>This is probably going to be a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span_context.cr","line_number":23,"url":null},"def":{"name":"parent_id","return_type":"Slice(UInt8) | ::Nil","visibility":"Public","body":""}},{"html_id":"parent_id=(parent_id:Slice(UInt8)?)-instance-method","name":"parent_id=","abstract":true,"args":[{"name":"parent_id","external_name":"parent_id","restriction":"Slice(UInt8) | ::Nil"}],"args_string":"(parent_id : Slice(UInt8)?)","args_html":"(parent_id : Slice(UInt8)?)","location":{"filename":"src/api/abstract_span_context.cr","line_number":24,"url":null},"def":{"name":"parent_id=","args":[{"name":"parent_id","external_name":"parent_id","restriction":"Slice(UInt8) | ::Nil"}],"visibility":"Public","body":""}},{"html_id":"remote:Bool-instance-method","name":"remote","doc":"This is probably going to be a property","summary":"<p>This is probably going to be a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span_context.cr","line_number":37,"url":null},"def":{"name":"remote","return_type":"Bool","visibility":"Public","body":""}},{"html_id":"remote=(remote:Bool)-instance-method","name":"remote=","abstract":true,"args":[{"name":"remote","external_name":"remote","restriction":"Bool"}],"args_string":"(remote : Bool)","args_html":"(remote : Bool)","location":{"filename":"src/api/abstract_span_context.cr","line_number":38,"url":null},"def":{"name":"remote=","args":[{"name":"remote","external_name":"remote","restriction":"Bool"}],"visibility":"Public","body":""}},{"html_id":"remote?-instance-method","name":"remote?","abstract":true,"location":{"filename":"src/api/abstract_span_context.cr","line_number":46,"url":null},"def":{"name":"remote?","visibility":"Public","body":""}},{"html_id":"span_id:Slice(UInt8)-instance-method","name":"span_id","doc":"This is probably going to be a property","summary":"<p>This is probably going to be a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span_context.cr","line_number":19,"url":null},"def":{"name":"span_id","return_type":"Slice(UInt8)","visibility":"Public","body":""}},{"html_id":"span_id=(span_id:Slice(UInt8))-instance-method","name":"span_id=","abstract":true,"args":[{"name":"span_id","external_name":"span_id","restriction":"Slice(UInt8)"}],"args_string":"(span_id : Slice(UInt8))","args_html":"(span_id : Slice(UInt8))","location":{"filename":"src/api/abstract_span_context.cr","line_number":20,"url":null},"def":{"name":"span_id=","args":[{"name":"span_id","external_name":"span_id","restriction":"Slice(UInt8)"}],"visibility":"Public","body":""}},{"html_id":"trace_flags:TraceFlags-instance-method","name":"trace_flags","doc":"This is probably going to be a property","summary":"<p>This is probably going to be a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span_context.cr","line_number":27,"url":null},"def":{"name":"trace_flags","return_type":"TraceFlags","visibility":"Public","body":""}},{"html_id":"trace_flags=(trace_flags:TraceFlags)-instance-method","name":"trace_flags=","abstract":true,"args":[{"name":"trace_flags","external_name":"trace_flags","restriction":"TraceFlags"}],"args_string":"(trace_flags : TraceFlags)","args_html":"(trace_flags : <a href=\"../../OpenTelemetry/API/TraceFlags.html\">TraceFlags</a>)","location":{"filename":"src/api/abstract_span_context.cr","line_number":28,"url":null},"def":{"name":"trace_flags=","args":[{"name":"trace_flags","external_name":"trace_flags","restriction":"TraceFlags"}],"visibility":"Public","body":""}},{"html_id":"trace_id:Slice(UInt8)-instance-method","name":"trace_id","doc":"This is probably going to be a property","summary":"<p>This is probably going to be a property</p>","abstract":true,"location":{"filename":"src/api/abstract_span_context.cr","line_number":15,"url":null},"def":{"name":"trace_id","return_type":"Slice(UInt8)","visibility":"Public","body":""}},{"html_id":"trace_id=(trace_id:Slice(UInt8))-instance-method","name":"trace_id=","abstract":true,"args":[{"name":"trace_id","external_name":"trace_id","restriction":"Slice(UInt8)"}],"args_string":"(trace_id : Slice(UInt8))","args_html":"(trace_id : Slice(UInt8))","location":{"filename":"src/api/abstract_span_context.cr","line_number":16,"url":null},"def":{"name":"trace_id=","args":[{"name":"trace_id","external_name":"trace_id","restriction":"Slice(UInt8)"}],"visibility":"Public","body":""}},{"html_id":"trace_state:Hash(String,String)-instance-method","name":"trace_state","doc":"TODO: We're currenty playing fast and loose with TraceState. TraceState, per the spec,\nshould be immutable, however, so this will need to be revised.\nThis is probably going to be a property","summary":"<p><span class=\"flag orange\">TODO</span>  We're currenty playing fast and loose with TraceState.</p>","abstract":true,"location":{"filename":"src/api/abstract_span_context.cr","line_number":33,"url":null},"def":{"name":"trace_state","return_type":"Hash(String, String)","visibility":"Public","body":""}},{"html_id":"trace_state=(trace_state:Hash(String,String))-instance-method","name":"trace_state=","abstract":true,"args":[{"name":"trace_state","external_name":"trace_state","restriction":"Hash(String, String)"}],"args_string":"(trace_state : Hash(String, String))","args_html":"(trace_state : Hash(String, String))","location":{"filename":"src/api/abstract_span_context.cr","line_number":34,"url":null},"def":{"name":"trace_state=","args":[{"name":"trace_state","external_name":"trace_state","restriction":"Hash(String, String)"}],"visibility":"Public","body":""}},{"html_id":"valid?-instance-method","name":"valid?","doc":"Returns true is the trace id and span id are non-zero","summary":"<p>Returns true is the trace id and span id are non-zero</p>","abstract":true,"location":{"filename":"src/api/abstract_span_context.cr","line_number":41,"url":null},"def":{"name":"valid?","visibility":"Public","body":""}}],"types":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractSpanContext/AbstractConfig","path":"OpenTelemetry/API/AbstractSpanContext/AbstractConfig.html","kind":"class","full_name":"OpenTelemetry::API::AbstractSpanContext::AbstractConfig","name":"AbstractConfig","abstract":true,"superclass":{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/span_context/abstract_config.cr","line_number":6,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"opentelemetry-api/OpenTelemetry/API/SpanContext/Config","kind":"class","full_name":"OpenTelemetry::API::SpanContext::Config","name":"Config"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractSpanContext","kind":"struct","full_name":"OpenTelemetry::API::AbstractSpanContext","name":"AbstractSpanContext"},"constructors":[{"html_id":"new(trace_id,span_id,parent_id=nil)-class-method","name":"new","abstract":false,"args":[{"name":"trace_id","external_name":"trace_id","restriction":""},{"name":"span_id","external_name":"span_id","restriction":""},{"name":"parent_id","default_value":"nil","external_name":"parent_id","restriction":""}],"args_string":"(trace_id, span_id, parent_id = nil)","args_html":"(trace_id, span_id, parent_id = <span class=\"n\">nil</span>)","location":{"filename":"src/api/span_context/abstract_config.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"trace_id","external_name":"trace_id","restriction":""},{"name":"span_id","external_name":"span_id","restriction":""},{"name":"parent_id","default_value":"nil","external_name":"parent_id","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(trace_id, span_id, parent_id)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(inherited_context:SpanContext)-class-method","name":"new","abstract":false,"args":[{"name":"inherited_context","external_name":"inherited_context","restriction":"SpanContext"}],"args_string":"(inherited_context : SpanContext)","args_html":"(inherited_context : <a href=\"../../../OpenTelemetry/API/SpanContext.html\">SpanContext</a>)","location":{"filename":"src/api/span_context/abstract_config.cr","line_number":9,"url":null},"def":{"name":"new","args":[{"name":"inherited_context","external_name":"inherited_context","restriction":"SpanContext"}],"visibility":"Public","body":"_ = allocate\n_.initialize(inherited_context)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"parent_id:Slice(UInt8)?-instance-method","name":"parent_id","doc":"Likely defined as a property","summary":"<p>Likely defined as a property</p>","abstract":true,"location":{"filename":"src/api/span_context/abstract_config.cr","line_number":20,"url":null},"def":{"name":"parent_id","return_type":"Slice(UInt8) | ::Nil","visibility":"Public","body":""}},{"html_id":"parent_id=(parent_id:Slice(UInt8)?)-instance-method","name":"parent_id=","abstract":true,"args":[{"name":"parent_id","external_name":"parent_id","restriction":"Slice(UInt8) | ::Nil"}],"args_string":"(parent_id : Slice(UInt8)?)","args_html":"(parent_id : Slice(UInt8)?)","location":{"filename":"src/api/span_context/abstract_config.cr","line_number":21,"url":null},"def":{"name":"parent_id=","args":[{"name":"parent_id","external_name":"parent_id","restriction":"Slice(UInt8) | ::Nil"}],"visibility":"Public","body":""}},{"html_id":"remote:Bool-instance-method","name":"remote","doc":"Likely defined as a property","summary":"<p>Likely defined as a property</p>","abstract":true,"location":{"filename":"src/api/span_context/abstract_config.cr","line_number":32,"url":null},"def":{"name":"remote","return_type":"Bool","visibility":"Public","body":""}},{"html_id":"remote=(remote:Bool)-instance-method","name":"remote=","abstract":true,"args":[{"name":"remote","external_name":"remote","restriction":"Bool"}],"args_string":"(remote : Bool)","args_html":"(remote : Bool)","location":{"filename":"src/api/span_context/abstract_config.cr","line_number":33,"url":null},"def":{"name":"remote=","args":[{"name":"remote","external_name":"remote","restriction":"Bool"}],"visibility":"Public","body":""}},{"html_id":"span_id:Slice(UInt8)-instance-method","name":"span_id","doc":"Likely defined as a property","summary":"<p>Likely defined as a property</p>","abstract":true,"location":{"filename":"src/api/span_context/abstract_config.cr","line_number":16,"url":null},"def":{"name":"span_id","return_type":"Slice(UInt8)","visibility":"Public","body":""}},{"html_id":"span_id=(span_id:Slice(UInt8))-instance-method","name":"span_id=","abstract":true,"args":[{"name":"span_id","external_name":"span_id","restriction":"Slice(UInt8)"}],"args_string":"(span_id : Slice(UInt8))","args_html":"(span_id : Slice(UInt8))","location":{"filename":"src/api/span_context/abstract_config.cr","line_number":17,"url":null},"def":{"name":"span_id=","args":[{"name":"span_id","external_name":"span_id","restriction":"Slice(UInt8)"}],"visibility":"Public","body":""}},{"html_id":"trace_flags:TraceFlags-instance-method","name":"trace_flags","doc":"Likely defined as a property","summary":"<p>Likely defined as a property</p>","abstract":true,"location":{"filename":"src/api/span_context/abstract_config.cr","line_number":24,"url":null},"def":{"name":"trace_flags","return_type":"TraceFlags","visibility":"Public","body":""}},{"html_id":"trace_flags=(trace_flags:TraceFlags)-instance-method","name":"trace_flags=","abstract":true,"args":[{"name":"trace_flags","external_name":"trace_flags","restriction":"TraceFlags"}],"args_string":"(trace_flags : TraceFlags)","args_html":"(trace_flags : <a href=\"../../../OpenTelemetry/API/TraceFlags.html\">TraceFlags</a>)","location":{"filename":"src/api/span_context/abstract_config.cr","line_number":25,"url":null},"def":{"name":"trace_flags=","args":[{"name":"trace_flags","external_name":"trace_flags","restriction":"TraceFlags"}],"visibility":"Public","body":""}},{"html_id":"trace_id:Slice(UInt8)-instance-method","name":"trace_id","doc":"Likely defined as a property","summary":"<p>Likely defined as a property</p>","abstract":true,"location":{"filename":"src/api/span_context/abstract_config.cr","line_number":12,"url":null},"def":{"name":"trace_id","return_type":"Slice(UInt8)","visibility":"Public","body":""}},{"html_id":"trace_id=(trace_id:Slice(UInt8))-instance-method","name":"trace_id=","abstract":true,"args":[{"name":"trace_id","external_name":"trace_id","restriction":"Slice(UInt8)"}],"args_string":"(trace_id : Slice(UInt8))","args_html":"(trace_id : Slice(UInt8))","location":{"filename":"src/api/span_context/abstract_config.cr","line_number":13,"url":null},"def":{"name":"trace_id=","args":[{"name":"trace_id","external_name":"trace_id","restriction":"Slice(UInt8)"}],"visibility":"Public","body":""}},{"html_id":"trace_state:Hash(String,String)-instance-method","name":"trace_state","doc":"Likely defined as a property","summary":"<p>Likely defined as a property</p>","abstract":true,"location":{"filename":"src/api/span_context/abstract_config.cr","line_number":28,"url":null},"def":{"name":"trace_state","return_type":"Hash(String, String)","visibility":"Public","body":""}},{"html_id":"trace_state=(trace_state:Hash(String,String))-instance-method","name":"trace_state=","abstract":true,"args":[{"name":"trace_state","external_name":"trace_state","restriction":"Hash(String, String)"}],"args_string":"(trace_state : Hash(String, String))","args_html":"(trace_state : Hash(String, String))","location":{"filename":"src/api/span_context/abstract_config.cr","line_number":29,"url":null},"def":{"name":"trace_state=","args":[{"name":"trace_state","external_name":"trace_state","restriction":"Hash(String, String)"}],"visibility":"Public","body":""}}]}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractStatus","path":"OpenTelemetry/API/AbstractStatus.html","kind":"struct","full_name":"OpenTelemetry::API::AbstractStatus","name":"AbstractStatus","abstract":true,"superclass":{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/abstract_status.cr","line_number":3,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"opentelemetry-api/OpenTelemetry/API/Status","kind":"struct","full_name":"OpenTelemetry::API::Status","name":"Status"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"constructors":[{"html_id":"new(code=StatusCode::Unset,message=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"code","default_value":"StatusCode::Unset","external_name":"code","restriction":""},{"name":"message","default_value":"\"\"","external_name":"message","restriction":""}],"args_string":"(code = StatusCode::Unset, message = \"\")","args_html":"(code = <span class=\"t\">StatusCode</span><span class=\"t\">::</span><span class=\"t\">Unset</span>, message = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/api/abstract_status.cr","line_number":10,"url":null},"def":{"name":"new","args":[{"name":"code","default_value":"StatusCode::Unset","external_name":"code","restriction":""},{"name":"message","default_value":"\"\"","external_name":"message","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(code, message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"code-instance-method","name":"code","doc":"This is assumed to be implemented as a property in the SDK.","summary":"<p>This is assumed to be implemented as a property in the SDK.</p>","abstract":true,"location":{"filename":"src/api/abstract_status.cr","line_number":27,"url":null},"def":{"name":"code","visibility":"Public","body":""}},{"html_id":"code=(code:StatusCode)-instance-method","name":"code=","abstract":true,"args":[{"name":"code","external_name":"code","restriction":"StatusCode"}],"args_string":"(code : StatusCode)","args_html":"(code : <a href=\"../../OpenTelemetry/API/AbstractStatus/StatusCode.html\">StatusCode</a>)","location":{"filename":"src/api/abstract_status.cr","line_number":28,"url":null},"def":{"name":"code=","args":[{"name":"code","external_name":"code","restriction":"StatusCode"}],"visibility":"Public","body":""}},{"html_id":"error!(message=nil)-instance-method","name":"error!","abstract":true,"args":[{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"args_string":"(message = nil)","args_html":"(message = <span class=\"n\">nil</span>)","location":{"filename":"src/api/abstract_status.cr","line_number":14,"url":null},"def":{"name":"error!","args":[{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"visibility":"Public","body":""}},{"html_id":"message-instance-method","name":"message","doc":"This is assumed to be implemented as a property in the SDK.","summary":"<p>This is assumed to be implemented as a property in the SDK.</p>","abstract":true,"location":{"filename":"src/api/abstract_status.cr","line_number":31,"url":null},"def":{"name":"message","visibility":"Public","body":""}},{"html_id":"message=(message:String)-instance-method","name":"message=","abstract":true,"args":[{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(message : String)","args_html":"(message : String)","location":{"filename":"src/api/abstract_status.cr","line_number":32,"url":null},"def":{"name":"message=","args":[{"name":"message","external_name":"message","restriction":"String"}],"visibility":"Public","body":""}},{"html_id":"ok!(message=nil)-instance-method","name":"ok!","abstract":true,"args":[{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"args_string":"(message = nil)","args_html":"(message = <span class=\"n\">nil</span>)","location":{"filename":"src/api/abstract_status.cr","line_number":12,"url":null},"def":{"name":"ok!","args":[{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"visibility":"Public","body":""}},{"html_id":"pb_status_code-instance-method","name":"pb_status_code","abstract":true,"location":{"filename":"src/api/abstract_status.cr","line_number":18,"url":null},"def":{"name":"pb_status_code","visibility":"Public","body":""}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":true,"args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/api/abstract_status.cr","line_number":24,"url":null},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":""}},{"html_id":"to_json-instance-method","name":"to_json","abstract":true,"location":{"filename":"src/api/abstract_status.cr","line_number":22,"url":null},"def":{"name":"to_json","visibility":"Public","body":""}},{"html_id":"to_protobuf-instance-method","name":"to_protobuf","abstract":true,"location":{"filename":"src/api/abstract_status.cr","line_number":20,"url":null},"def":{"name":"to_protobuf","visibility":"Public","body":""}},{"html_id":"unset!(message=nil)-instance-method","name":"unset!","abstract":true,"args":[{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"args_string":"(message = nil)","args_html":"(message = <span class=\"n\">nil</span>)","location":{"filename":"src/api/abstract_status.cr","line_number":16,"url":null},"def":{"name":"unset!","args":[{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"visibility":"Public","body":""}}],"types":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractStatus/StatusCode","path":"OpenTelemetry/API/AbstractStatus/StatusCode.html","kind":"enum","full_name":"OpenTelemetry::API::AbstractStatus::StatusCode","name":"StatusCode","abstract":false,"ancestors":[{"html_id":"opentelemetry-api/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"opentelemetry-api/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/abstract_status.cr","line_number":4,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Unset","name":"Unset","value":"0"},{"id":"Ok","name":"Ok","value":"1"},{"id":"Error","name":"Error","value":"2"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractStatus","kind":"struct","full_name":"OpenTelemetry::API::AbstractStatus","name":"AbstractStatus"},"instance_methods":[{"html_id":"error?-instance-method","name":"error?","abstract":false,"location":{"filename":"src/api/abstract_status.cr","line_number":7,"url":null},"def":{"name":"error?","visibility":"Public","body":"self == Error"}},{"html_id":"ok?-instance-method","name":"ok?","abstract":false,"location":{"filename":"src/api/abstract_status.cr","line_number":6,"url":null},"def":{"name":"ok?","visibility":"Public","body":"self == Ok"}},{"html_id":"unset?-instance-method","name":"unset?","abstract":false,"location":{"filename":"src/api/abstract_status.cr","line_number":5,"url":null},"def":{"name":"unset?","visibility":"Public","body":"self == Unset"}}]}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractTextMapPropagator","path":"OpenTelemetry/API/AbstractTextMapPropagator.html","kind":"struct","full_name":"OpenTelemetry::API::AbstractTextMapPropagator","name":"AbstractTextMapPropagator","abstract":true,"superclass":{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/abstract_text_map_propagator.cr","line_number":7,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"opentelemetry-api/OpenTelemetry/API/TextMapPropagator","kind":"struct","full_name":"OpenTelemetry::API::TextMapPropagator","name":"TextMapPropagator"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"doc":"An `OpenTelemetry::Propagator` encapsulates common behavior for typical\npropagators. Propagators are used to carry and transfer state, typically\nvia either a TraceContext or via Baggage. This class will be subclassed\nto provide additional specific behavior to conform with the specs for\nthe relevant type of propagator.","summary":"<p>An <code>OpenTelemetry::Propagator</code> encapsulates common behavior for typical propagators.</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/api/abstract_text_map_propagator.cr","line_number":7,"url":null},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"html_id":"extract(carrier,context:Context)-instance-method","name":"extract","abstract":true,"args":[{"name":"carrier","external_name":"carrier","restriction":""},{"name":"context","external_name":"context","restriction":"Context"}],"args_string":"(carrier, context : Context)","args_html":"(carrier, context : <a href=\"../../OpenTelemetry/API/Context.html\">Context</a>)","location":{"filename":"src/api/abstract_text_map_propagator.cr","line_number":9,"url":null},"def":{"name":"extract","args":[{"name":"carrier","external_name":"carrier","restriction":""},{"name":"context","external_name":"context","restriction":"Context"}],"visibility":"Public","body":""}},{"html_id":"fields-instance-method","name":"fields","abstract":true,"location":{"filename":"src/api/abstract_text_map_propagator.cr","line_number":10,"url":null},"def":{"name":"fields","visibility":"Public","body":""}},{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src/api/abstract_text_map_propagator.cr","line_number":7,"url":null},"def":{"name":"initialize","visibility":"Public","body":""}},{"html_id":"inject(carrier,context:Context)-instance-method","name":"inject","abstract":true,"args":[{"name":"carrier","external_name":"carrier","restriction":""},{"name":"context","external_name":"context","restriction":"Context"}],"args_string":"(carrier, context : Context)","args_html":"(carrier, context : <a href=\"../../OpenTelemetry/API/Context.html\">Context</a>)","location":{"filename":"src/api/abstract_text_map_propagator.cr","line_number":8,"url":null},"def":{"name":"inject","args":[{"name":"carrier","external_name":"carrier","restriction":""},{"name":"context","external_name":"context","restriction":"Context"}],"visibility":"Public","body":""}}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/Context","path":"OpenTelemetry/API/Context.html","kind":"struct","full_name":"OpenTelemetry::API::Context","name":"Context","abstract":false,"superclass":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractContext","kind":"struct","full_name":"OpenTelemetry::API::AbstractContext","name":"AbstractContext"},"ancestors":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractContext","kind":"struct","full_name":"OpenTelemetry::API::AbstractContext","name":"AbstractContext"},{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/context.cr","line_number":7,"url":null},{"filename":"src/api/context/key.cr","line_number":6,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"class_methods":[{"html_id":"[](key)-class-method","name":"[]","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/context.cr","line_number":72,"url":null},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]=(key,value)-class-method","name":"[]=","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/context.cr","line_number":84,"url":null},"def":{"name":"[]=","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]?(key)-class-method","name":"[]?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/context.cr","line_number":75,"url":null},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"attach(entries)-class-method","name":"attach","abstract":false,"args":[{"name":"entries","external_name":"entries","restriction":""}],"args_string":"(entries)","args_html":"(entries)","location":{"filename":"src/api/context.cr","line_number":38,"url":null},"def":{"name":"attach","args":[{"name":"entries","external_name":"entries","restriction":""}],"visibility":"Public","body":""}},{"html_id":"clear-class-method","name":"clear","abstract":false,"location":{"filename":"src/api/context.cr","line_number":90,"url":null},"def":{"name":"clear","visibility":"Public","body":""}},{"html_id":"create_key(name)-class-method","name":"create_key","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""}],"args_string":"(name)","args_html":"(name)","location":{"filename":"src/api/context.cr","line_number":19,"url":null},"def":{"name":"create_key","args":[{"name":"name","external_name":"name","restriction":""}],"visibility":"Public","body":""}},{"html_id":"create_key-class-method","name":"create_key","abstract":false,"location":{"filename":"src/api/context.cr","line_number":16,"url":null},"def":{"name":"create_key","visibility":"Public","body":""}},{"html_id":"current-class-method","name":"current","abstract":false,"location":{"filename":"src/api/context.cr","line_number":13,"url":null},"def":{"name":"current","visibility":"Public","body":""}},{"html_id":"detach(token)-class-method","name":"detach","doc":"Restores the previous Context associated with the current Fiber.\nThe supplied token is used to check if the call to detach is balanced\nwith a corresponding attach call. A warning is logged if the\ncalls are unbalanced.","summary":"<p>Restores the previous Context associated with the current Fiber.</p>","abstract":false,"args":[{"name":"token","external_name":"token","restriction":""}],"args_string":"(token)","args_html":"(token)","location":{"filename":"src/api/context.cr","line_number":32,"url":null},"def":{"name":"detach","args":[{"name":"token","external_name":"token","restriction":""}],"visibility":"Public","body":""}},{"html_id":"set_value(key,value)-class-method","name":"set_value","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/context.cr","line_number":87,"url":null},"def":{"name":"set_value","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"stack-class-method","name":"stack","abstract":false,"location":{"filename":"src/api/context.cr","line_number":10,"url":null},"def":{"name":"stack","visibility":"Public","body":""}},{"html_id":"value(key)-class-method","name":"value","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/context.cr","line_number":78,"url":null},"def":{"name":"value","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"value?(key)-class-method","name":"value?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/context.cr","line_number":81,"url":null},"def":{"name":"value?","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"with(key,values)-class-method","name":"with","doc":"Execute a block in a new context with key set to value. Restores the\nprevious context after the block executes.","summary":"<p>Execute a block in a new context with key set to value.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"values","external_name":"values","restriction":""}],"args_string":"(key, values)","args_html":"(key, values)","location":{"filename":"src/api/context.cr","line_number":69,"url":null},"def":{"name":"with","args":[{"name":"key","external_name":"key","restriction":""},{"name":"values","external_name":"values","restriction":""}],"visibility":"Public","body":""}},{"html_id":"with(values)-class-method","name":"with","doc":"@param [String] key The lookup key\n@param [Hash] values Will be merged with values of the current context\n and returned in a new context\n@param [Callable] Block to execute in a new context\n@yield [context, values] Yields the newly created context and values\n  to the block","summary":"<p>@param [String] key The lookup key @param [Hash] values Will be merged with values of the current context  and returned in a new context @param [Callable] Block to execute in a new context @yield [context, values] Yields the newly created context and values   to the block</p>","abstract":false,"args":[{"name":"values","external_name":"values","restriction":""}],"args_string":"(values)","args_html":"(values)","location":{"filename":"src/api/context.cr","line_number":66,"url":null},"def":{"name":"with","args":[{"name":"values","external_name":"values","restriction":""}],"visibility":"Public","body":""}}],"constructors":[{"html_id":"new(entries)-class-method","name":"new","abstract":false,"args":[{"name":"entries","external_name":"entries","restriction":""}],"args_string":"(entries)","args_html":"(entries)","location":{"filename":"src/api/context.cr","line_number":99,"url":null},"def":{"name":"new","args":[{"name":"entries","external_name":"entries","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(entries)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/api/context.cr","line_number":93,"url":null},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](key)-instance-method","name":"[]","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/context.cr","line_number":108,"url":null},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]=(key,value)-instance-method","name":"[]=","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/context.cr","line_number":117,"url":null},"def":{"name":"[]=","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]?(key)-instance-method","name":"[]?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/context.cr","line_number":111,"url":null},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"entries-instance-method","name":"entries","abstract":false,"location":{"filename":"src/api/context.cr","line_number":120,"url":null},"def":{"name":"entries","visibility":"Public","body":""}},{"html_id":"merge(other_entries)-instance-method","name":"merge","abstract":false,"args":[{"name":"other_entries","external_name":"other_entries","restriction":""}],"args_string":"(other_entries)","args_html":"(other_entries)","location":{"filename":"src/api/context.cr","line_number":123,"url":null},"def":{"name":"merge","args":[{"name":"other_entries","external_name":"other_entries","restriction":""}],"visibility":"Public","body":""}},{"html_id":"object_id:CSUUID-instance-method","name":"object_id","doc":"This is assumed to be implemented as a getter with\na default value of `CSUUID.unique`.","summary":"<p>This is assumed to be implemented as a getter with a default value of <code>CSUUID.unique</code>.</p>","abstract":false,"location":{"filename":"src/api/context.cr","line_number":8,"url":null},"def":{"name":"object_id","return_type":"CSUUID","visibility":"Public","body":"@object_id"}},{"html_id":"set_value(key,value)-instance-method","name":"set_value","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/context.cr","line_number":114,"url":null},"def":{"name":"set_value","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"value(key)-instance-method","name":"value","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/context.cr","line_number":102,"url":null},"def":{"name":"value","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"value?(key)-instance-method","name":"value?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/context.cr","line_number":105,"url":null},"def":{"name":"value?","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}}],"types":[{"html_id":"opentelemetry-api/OpenTelemetry/API/Context/Key","path":"OpenTelemetry/API/Context/Key.html","kind":"struct","full_name":"OpenTelemetry::API::Context::Key","name":"Key","abstract":false,"superclass":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractContext/AbstractKey","kind":"struct","full_name":"OpenTelemetry::API::AbstractContext::AbstractKey","name":"AbstractKey"},"ancestors":[{"html_id":"opentelemetry-api/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractContext/AbstractKey","kind":"struct","full_name":"OpenTelemetry::API::AbstractContext::AbstractKey","name":"AbstractKey"},{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/context/key.cr","line_number":7,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"opentelemetry-api/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API/Context","kind":"struct","full_name":"OpenTelemetry::API::Context","name":"Context"},"constructors":[{"html_id":"new(name:String=CSUUID.unique.to_s,context:OpenTelemetry::API::Context=Context.current,id:CSUUID=CSUUID.unique)-class-method","name":"new","abstract":false,"args":[{"name":"name","default_value":"CSUUID.unique.to_s","external_name":"name","restriction":"::String"},{"name":"context","default_value":"Context.current","external_name":"context","restriction":"::OpenTelemetry::API::Context"},{"name":"id","default_value":"CSUUID.unique","external_name":"id","restriction":"::CSUUID"}],"args_string":"(name : String = CSUUID.unique.to_s, context : OpenTelemetry::API::Context = Context.current, id : CSUUID = CSUUID.unique)","args_html":"(name : String = <span class=\"t\">CSUUID</span>.unique.to_s, context : <a href=\"../../../OpenTelemetry/API/Context.html\">OpenTelemetry::API::Context</a> = <span class=\"t\">Context</span>.current, id : CSUUID = <span class=\"t\">CSUUID</span>.unique)","location":{"filename":"src/api/context/key.cr","line_number":14,"url":null},"def":{"name":"new","args":[{"name":"name","default_value":"CSUUID.unique.to_s","external_name":"name","restriction":"::String"},{"name":"context","default_value":"Context.current","external_name":"context","restriction":"::OpenTelemetry::API::Context"},{"name":"id","default_value":"CSUUID.unique","external_name":"id","restriction":"::CSUUID"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, context, id)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"<=>(other)-instance-method","name":"<=>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/api/context/key.cr","line_number":23,"url":null},"def":{"name":"<=>","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"id <=> other.id"}},{"html_id":"context:Context-instance-method","name":"context","abstract":false,"location":{"filename":"src/api/context/key.cr","line_number":12,"url":null},"def":{"name":"context","return_type":"Context","visibility":"Public","body":"@context"}},{"html_id":"get(context=Context.current)-instance-method","name":"get","abstract":false,"args":[{"name":"context","default_value":"Context.current","external_name":"context","restriction":""}],"args_string":"(context = Context.current)","args_html":"(context = <span class=\"t\">Context</span>.current)","location":{"filename":"src/api/context/key.cr","line_number":20,"url":null},"def":{"name":"get","args":[{"name":"context","default_value":"Context.current","external_name":"context","restriction":""}],"visibility":"Public","body":""}},{"html_id":"id:CSUUID-instance-method","name":"id","abstract":false,"location":{"filename":"src/api/context/key.cr","line_number":11,"url":null},"def":{"name":"id","return_type":"CSUUID","visibility":"Public","body":"@id"}},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/api/context/key.cr","line_number":10,"url":null},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"value-instance-method","name":"value","abstract":false,"location":{"filename":"src/api/context/key.cr","line_number":17,"url":null},"def":{"name":"value","visibility":"Public","body":""}}]}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/Event","path":"OpenTelemetry/API/Event.html","kind":"class","full_name":"OpenTelemetry::API::Event","name":"Event","abstract":false,"superclass":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractEvent","kind":"class","full_name":"OpenTelemetry::API::AbstractEvent","name":"AbstractEvent"},"ancestors":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractEvent","kind":"class","full_name":"OpenTelemetry::API::AbstractEvent","name":"AbstractEvent"},{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/event.cr","line_number":3,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"constructors":[{"html_id":"new(name:String,attributes:Hash(String,AnyAttribute))-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"attributes","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"args_string":"(name : String, attributes : Hash(String, AnyAttribute))","args_html":"(name : String, attributes : Hash(String, <a href=\"../../OpenTelemetry/AnyAttribute.html\">AnyAttribute</a>))","location":{"filename":"src/api/event.cr","line_number":17,"url":null},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"attributes","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, attributes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(name:String,attributes:Hash(String,_))-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"attributes","external_name":"attributes","restriction":"Hash(String, _)"}],"args_string":"(name : String, attributes : Hash(String, _))","args_html":"(name : String, attributes : Hash(String, _))","location":{"filename":"src/api/event.cr","line_number":20,"url":null},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"attributes","external_name":"attributes","restriction":"Hash(String, _)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, attributes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(name:String)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/api/event.cr","line_number":10,"url":null},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(name:String=\"\",&)-class-method","name":"new","abstract":false,"args":[{"name":"name","default_value":"\"\"","external_name":"name","restriction":"::String"}],"args_string":"(name : String = \"\", &)","args_html":"(name : String = <span class=\"s\">&quot;&quot;</span>, &)","location":{"filename":"src/api/event.cr","line_number":13,"url":null},"def":{"name":"new","args":[{"name":"name","default_value":"\"\"","external_name":"name","restriction":"::String"}],"yields":1,"visibility":"Public","body":"_ = allocate\n_.initialize(name) do |_arg0|\n  yield _arg0\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](key)-instance-method","name":"[]","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/event.cr","line_number":32,"url":null},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]=(key,value)-instance-method","name":"[]=","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/event.cr","line_number":26,"url":null},"def":{"name":"[]=","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"attributes:Hash(String,AnyAttribute)-instance-method","name":"attributes","abstract":false,"location":{"filename":"src/api/event.cr","line_number":7,"url":null},"def":{"name":"attributes","return_type":"Hash(String, AnyAttribute)","visibility":"Public","body":"@attributes"}},{"html_id":"attributes=(attr:Hash(String,_))-instance-method","name":"attributes=","abstract":false,"args":[{"name":"attr","external_name":"attr","restriction":"Hash(String, _)"}],"args_string":"(attr : Hash(String, _))","args_html":"(attr : Hash(String, _))","location":{"filename":"src/api/event.cr","line_number":23,"url":null},"def":{"name":"attributes=","args":[{"name":"attr","external_name":"attr","restriction":"Hash(String, _)"}],"visibility":"Public","body":""}},{"html_id":"get_attribute(key)-instance-method","name":"get_attribute","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/event.cr","line_number":35,"url":null},"def":{"name":"get_attribute","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/api/event.cr","line_number":4,"url":null},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"name=(name:String)-instance-method","name":"name=","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/api/event.cr","line_number":4,"url":null},"def":{"name":"name=","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"@name = name"}},{"html_id":"parent_span:Span?-instance-method","name":"parent_span","abstract":false,"location":{"filename":"src/api/event.cr","line_number":8,"url":null},"def":{"name":"parent_span","return_type":"Span | ::Nil","visibility":"Public","body":"@parent_span"}},{"html_id":"parent_span=(parent_span:Span?)-instance-method","name":"parent_span=","abstract":false,"args":[{"name":"parent_span","external_name":"parent_span","restriction":"Span | ::Nil"}],"args_string":"(parent_span : Span?)","args_html":"(parent_span : <a href=\"../../OpenTelemetry/API/Span.html\">Span</a>?)","location":{"filename":"src/api/event.cr","line_number":8,"url":null},"def":{"name":"parent_span=","args":[{"name":"parent_span","external_name":"parent_span","restriction":"Span | ::Nil"}],"visibility":"Public","body":"@parent_span = parent_span"}},{"html_id":"set_attribute(key,value)-instance-method","name":"set_attribute","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/event.cr","line_number":29,"url":null},"def":{"name":"set_attribute","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"timestamp:Time::Span-instance-method","name":"timestamp","abstract":false,"location":{"filename":"src/api/event.cr","line_number":5,"url":null},"def":{"name":"timestamp","return_type":"Time::Span","visibility":"Public","body":"@timestamp"}},{"html_id":"timestamp=(timestamp:Time::Span)-instance-method","name":"timestamp=","abstract":false,"args":[{"name":"timestamp","external_name":"timestamp","restriction":"Time::Span"}],"args_string":"(timestamp : Time::Span)","args_html":"(timestamp : Time::Span)","location":{"filename":"src/api/event.cr","line_number":5,"url":null},"def":{"name":"timestamp=","args":[{"name":"timestamp","external_name":"timestamp","restriction":"Time::Span"}],"visibility":"Public","body":"@timestamp = timestamp"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/api/event.cr","line_number":44,"url":null},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":""}},{"html_id":"to_json-instance-method","name":"to_json","abstract":false,"location":{"filename":"src/api/event.cr","line_number":41,"url":null},"def":{"name":"to_json","visibility":"Public","body":""}},{"html_id":"to_protobuf-instance-method","name":"to_protobuf","abstract":false,"location":{"filename":"src/api/event.cr","line_number":38,"url":null},"def":{"name":"to_protobuf","visibility":"Public","body":""}},{"html_id":"wall_timestamp:Time-instance-method","name":"wall_timestamp","abstract":false,"location":{"filename":"src/api/event.cr","line_number":6,"url":null},"def":{"name":"wall_timestamp","return_type":"Time","visibility":"Public","body":"@wall_timestamp"}},{"html_id":"wall_timestamp=(wall_timestamp:Time)-instance-method","name":"wall_timestamp=","abstract":false,"args":[{"name":"wall_timestamp","external_name":"wall_timestamp","restriction":"Time"}],"args_string":"(wall_timestamp : Time)","args_html":"(wall_timestamp : Time)","location":{"filename":"src/api/event.cr","line_number":6,"url":null},"def":{"name":"wall_timestamp=","args":[{"name":"wall_timestamp","external_name":"wall_timestamp","restriction":"Time"}],"visibility":"Public","body":"@wall_timestamp = wall_timestamp"}}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/IdGenerator","path":"OpenTelemetry/API/IdGenerator.html","kind":"struct","full_name":"OpenTelemetry::API::IdGenerator","name":"IdGenerator","abstract":false,"superclass":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractIdGenerator","kind":"struct","full_name":"OpenTelemetry::API::AbstractIdGenerator","name":"AbstractIdGenerator"},"ancestors":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractIdGenerator","kind":"struct","full_name":"OpenTelemetry::API::AbstractIdGenerator","name":"AbstractIdGenerator"},{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/id_generator.cr","line_number":5,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"class_methods":[{"html_id":"generator:OpenTelemetry::API::IdGenerator::Base-class-method","name":"generator","abstract":false,"location":{"filename":"src/api/id_generator.cr","line_number":7,"url":null},"def":{"name":"generator","return_type":"OpenTelemetry::API::IdGenerator::Base","visibility":"Public","body":"@@generator"}},{"html_id":"generator=(generator:OpenTelemetry::API::IdGenerator::Base)-class-method","name":"generator=","abstract":false,"args":[{"name":"generator","external_name":"generator","restriction":"OpenTelemetry::API::IdGenerator::Base"}],"args_string":"(generator : OpenTelemetry::API::IdGenerator::Base)","args_html":"(generator : <a href=\"../../OpenTelemetry/API/AbstractIdGenerator/Base.html\">OpenTelemetry::API::IdGenerator::Base</a>)","location":{"filename":"src/api/id_generator.cr","line_number":7,"url":null},"def":{"name":"generator=","args":[{"name":"generator","external_name":"generator","restriction":"OpenTelemetry::API::IdGenerator::Base"}],"visibility":"Public","body":"@@generator = generator"}},{"html_id":"span_id-class-method","name":"span_id","abstract":false,"location":{"filename":"src/api/id_generator.cr","line_number":25,"url":null},"def":{"name":"span_id","visibility":"Public","body":"generator.span_id"}},{"html_id":"trace_id-class-method","name":"trace_id","abstract":false,"location":{"filename":"src/api/id_generator.cr","line_number":21,"url":null},"def":{"name":"trace_id","visibility":"Public","body":"generator.trace_id"}}],"constructors":[{"html_id":"new(variant:String|Symbol=\"unique\")-class-method","name":"new","abstract":false,"args":[{"name":"variant","default_value":"\"unique\"","external_name":"variant","restriction":"String | Symbol"}],"args_string":"(variant : String | Symbol = \"unique\")","args_html":"(variant : String | Symbol = <span class=\"s\">&quot;unique&quot;</span>)","location":{"filename":"src/api/id_generator.cr","line_number":9,"url":null},"def":{"name":"new","args":[{"name":"variant","default_value":"\"unique\"","external_name":"variant","restriction":"String | Symbol"}],"visibility":"Public","body":"_ = allocate\n_.initialize(variant)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"generator:OpenTelemetry::API::IdGenerator::Base-instance-method","name":"generator","abstract":false,"location":{"filename":"src/api/id_generator.cr","line_number":6,"url":null},"def":{"name":"generator","return_type":"OpenTelemetry::API::IdGenerator::Base","visibility":"Public","body":"@generator"}},{"html_id":"span_id-instance-method","name":"span_id","abstract":false,"location":{"filename":"src/api/id_generator.cr","line_number":17,"url":null},"def":{"name":"span_id","visibility":"Public","body":"@generator.span_id"}},{"html_id":"trace_id-instance-method","name":"trace_id","abstract":false,"location":{"filename":"src/api/id_generator.cr","line_number":13,"url":null},"def":{"name":"trace_id","visibility":"Public","body":"@generator.trace_id"}}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/Resource","path":"OpenTelemetry/API/Resource.html","kind":"class","full_name":"OpenTelemetry::API::Resource","name":"Resource","abstract":false,"superclass":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractResource","kind":"class","full_name":"OpenTelemetry::API::AbstractResource","name":"AbstractResource"},"ancestors":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractResource","kind":"class","full_name":"OpenTelemetry::API::AbstractResource","name":"AbstractResource"},{"html_id":"opentelemetry-api/OpenTelemetry/Sendable","kind":"module","full_name":"OpenTelemetry::Sendable","name":"Sendable"},{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/resource.cr","line_number":5,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"constructors":[{"html_id":"new(attrs)-class-method","name":"new","doc":"Create a new Resource that has been intialized by the provided key/value pairs.\nThis initialization will support any seed object that provides an `#each` method\nwhich takes a two-argument block.","summary":"<p>Create a new Resource that has been intialized by the provided key/value pairs.</p>","abstract":false,"args":[{"name":"attrs","external_name":"attrs","restriction":""}],"args_string":"(attrs)","args_html":"(attrs)","location":{"filename":"src/api/resource.cr","line_number":12,"url":null},"def":{"name":"new","args":[{"name":"attrs","external_name":"attrs","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(attrs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new-class-method","name":"new","doc":"Create an empty Resource.","summary":"<p>Create an empty Resource.</p>","abstract":false,"location":{"filename":"src/api/resource.cr","line_number":16,"url":null},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](key)-instance-method","name":"[]","doc":"Retrieve the value for a key in the Resource.","summary":"<p>Retrieve the value for a key in the Resource.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/resource.cr","line_number":28,"url":null},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]=(key,value)-instance-method","name":"[]=","doc":"Assign a value to a key in the Resource.","summary":"<p>Assign a value to a key in the Resource.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/resource.cr","line_number":20,"url":null},"def":{"name":"[]=","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]?(key)-instance-method","name":"[]?","doc":"Retrieve a value for a key in the Resource. Return nil instead of an exception if the key is not present.","summary":"<p>Retrieve a value for a key in the Resource.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/resource.cr","line_number":36,"url":null},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"attributes:Hash(String,AnyAttribute)-instance-method","name":"attributes","abstract":false,"location":{"filename":"src/api/resource.cr","line_number":6,"url":null},"def":{"name":"attributes","return_type":"Hash(String, AnyAttribute)","visibility":"Public","body":"@attributes"}},{"html_id":"attributes=(attributes:Hash(String,AnyAttribute))-instance-method","name":"attributes=","abstract":false,"args":[{"name":"attributes","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"args_string":"(attributes : Hash(String, AnyAttribute))","args_html":"(attributes : Hash(String, <a href=\"../../OpenTelemetry/AnyAttribute.html\">AnyAttribute</a>))","location":{"filename":"src/api/resource.cr","line_number":6,"url":null},"def":{"name":"attributes=","args":[{"name":"attributes","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"visibility":"Public","body":"@attributes = attributes"}},{"html_id":"dropped_attribute_count:UInt32-instance-method","name":"dropped_attribute_count","abstract":false,"location":{"filename":"src/api/resource.cr","line_number":7,"url":null},"def":{"name":"dropped_attribute_count","return_type":"UInt32","visibility":"Public","body":"@dropped_attribute_count"}},{"html_id":"dropped_attribute_count=(dropped_attribute_count:UInt32)-instance-method","name":"dropped_attribute_count=","abstract":false,"args":[{"name":"dropped_attribute_count","external_name":"dropped_attribute_count","restriction":"UInt32"}],"args_string":"(dropped_attribute_count : UInt32)","args_html":"(dropped_attribute_count : UInt32)","location":{"filename":"src/api/resource.cr","line_number":7,"url":null},"def":{"name":"dropped_attribute_count=","args":[{"name":"dropped_attribute_count","external_name":"dropped_attribute_count","restriction":"UInt32"}],"visibility":"Public","body":"@dropped_attribute_count = dropped_attribute_count"}},{"html_id":"empty?-instance-method","name":"empty?","doc":"Return true if the resource is empty.","summary":"<p>Return true if the resource is empty.</p>","abstract":false,"location":{"filename":"src/api/resource.cr","line_number":44,"url":null},"def":{"name":"empty?","visibility":"Public","body":""}},{"html_id":"get_attribute(key)-instance-method","name":"get_attribute","doc":"Alias for `#[]`","summary":"<p>Alias for <code><a href=\"../../OpenTelemetry/API/Resource.html#%5B%5D%28key%29-instance-method\">#[]</a></code></p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/resource.cr","line_number":32,"url":null},"def":{"name":"get_attribute","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"get_attribute?(key)-instance-method","name":"get_attribute?","doc":"Alias for `#[]?`","summary":"<p>Alias for <code><a href=\"../../OpenTelemetry/API/Resource.html#%5B%5D%3F%28key%29-instance-method\">#[]?</a></code></p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/resource.cr","line_number":40,"url":null},"def":{"name":"get_attribute?","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"set_attribute(key,value)-instance-method","name":"set_attribute","doc":"Alias for `#[]=`","summary":"<p>Alias for <code><a href=\"../../OpenTelemetry/API/Resource.html#%5B%5D%3D%28key%2Cvalue%29-instance-method\">#[]=</a></code></p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/resource.cr","line_number":24,"url":null},"def":{"name":"set_attribute","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/api/resource.cr","line_number":55,"url":null},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":""}},{"html_id":"to_json-instance-method","name":"to_json","doc":"Export the resource with a JSON representation.","summary":"<p>Export the resource with a JSON representation.</p>","abstract":false,"location":{"filename":"src/api/resource.cr","line_number":52,"url":null},"def":{"name":"to_json","visibility":"Public","body":""}},{"html_id":"to_protobuf-instance-method","name":"to_protobuf","doc":"Export the resource to its protocol buffer representation.","summary":"<p>Export the resource to its protocol buffer representation.</p>","abstract":false,"location":{"filename":"src/api/resource.cr","line_number":48,"url":null},"def":{"name":"to_protobuf","visibility":"Public","body":""}}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/Span","path":"OpenTelemetry/API/Span.html","kind":"class","full_name":"OpenTelemetry::API::Span","name":"Span","abstract":false,"superclass":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractSpan","kind":"class","full_name":"OpenTelemetry::API::AbstractSpan","name":"AbstractSpan"},"ancestors":[{"html_id":"opentelemetry-api/OpenTelemetry/Sendable","kind":"module","full_name":"OpenTelemetry::Sendable","name":"Sendable"},{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractSpan","kind":"class","full_name":"OpenTelemetry::API::AbstractSpan","name":"AbstractSpan"},{"html_id":"opentelemetry-api/OpenTelemetry/Sendable","kind":"module","full_name":"OpenTelemetry::Sendable","name":"Sendable"},{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/span.cr","line_number":13,"url":null},{"filename":"src/api/span/kind.cr","line_number":5,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MATCH","name":"MATCH","value":"/(?<span_id>[A-Fa-f0-9]{16})/"}],"included_modules":[{"html_id":"opentelemetry-api/OpenTelemetry/Sendable","kind":"module","full_name":"OpenTelemetry::Sendable","name":"Sendable"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"doc":"A `Span` represents a single measured timespan, and all data associated\nwith that measurement. A `Span` may nest other `Span` instances.","summary":"<p>A <code><a href=\"../../OpenTelemetry/API/Span.html\">Span</a></code> represents a single measured timespan, and all data associated with that measurement.</p>","constructors":[{"html_id":"new(name:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"name","default_value":"\"\"","external_name":"name","restriction":"::String"}],"args_string":"(name : String = \"\")","args_html":"(name : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/api/span.cr","line_number":32,"url":null},"def":{"name":"new","args":[{"name":"name","default_value":"\"\"","external_name":"name","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](key)-instance-method","name":"[]","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/span.cr","line_number":44,"url":null},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]=(key,value)-instance-method","name":"[]=","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/span.cr","line_number":38,"url":null},"def":{"name":"[]=","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"add_event(name,attributes:Hash(String,AnyAttribute)={}ofString=>AnyAttribute)-instance-method","name":"add_event","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"attributes","default_value":"{} of String => AnyAttribute","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"args_string":"(name, attributes : Hash(String, AnyAttribute) = {} of String => AnyAttribute)","args_html":"(name, attributes : Hash(String, <a href=\"../../OpenTelemetry/AnyAttribute.html\">AnyAttribute</a>) = {} <span class=\"k\">of</span> <span class=\"t\">String</span> =&gt; <span class=\"t\">AnyAttribute</span>)","location":{"filename":"src/api/span.cr","line_number":57,"url":null},"def":{"name":"add_event","args":[{"name":"name","external_name":"name","restriction":""},{"name":"attributes","default_value":"{} of String => AnyAttribute","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"visibility":"Public","body":""}},{"html_id":"add_event(name=\"\",&blk:Event->)-instance-method","name":"add_event","abstract":false,"args":[{"name":"name","default_value":"\"\"","external_name":"name","restriction":""}],"args_string":"(name = \"\", &blk : Event -> )","args_html":"(name = <span class=\"s\">&quot;&quot;</span>, &blk : <a href=\"../../OpenTelemetry/API/Event.html\">Event</a> -> )","location":{"filename":"src/api/span.cr","line_number":53,"url":null},"def":{"name":"add_event","args":[{"name":"name","default_value":"\"\"","external_name":"name","restriction":""}],"yields":1,"block_arg":{"name":"blk","external_name":"blk","restriction":"(Event ->)"},"visibility":"Public","body":"yield Event.new(name)"}},{"html_id":"attributes:Hash(String,AnyAttribute)-instance-method","name":"attributes","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":false,"location":{"filename":"src/api/span.cr","line_number":22,"url":null},"def":{"name":"attributes","return_type":"Hash(String, AnyAttribute)","visibility":"Public","body":"@attributes"}},{"html_id":"attributes=(attributes:Hash(String,AnyAttribute))-instance-method","name":"attributes=","abstract":false,"args":[{"name":"attributes","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"args_string":"(attributes : Hash(String, AnyAttribute))","args_html":"(attributes : Hash(String, <a href=\"../../OpenTelemetry/AnyAttribute.html\">AnyAttribute</a>))","location":{"filename":"src/api/span.cr","line_number":22,"url":null},"def":{"name":"attributes=","args":[{"name":"attributes","external_name":"attributes","restriction":"Hash(String, AnyAttribute)"}],"visibility":"Public","body":"@attributes = attributes"}},{"html_id":"can_export?-instance-method","name":"can_export?","abstract":false,"location":{"filename":"src/api/span.cr","line_number":81,"url":null},"def":{"name":"can_export?","visibility":"Public","body":""}},{"html_id":"children:Array(Span)-instance-method","name":"children","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":false,"location":{"filename":"src/api/span.cr","line_number":24,"url":null},"def":{"name":"children","return_type":"Array(Span)","visibility":"Public","body":"@children"}},{"html_id":"children=(children:Array(Span))-instance-method","name":"children=","abstract":false,"args":[{"name":"children","external_name":"children","restriction":"Array(Span)"}],"args_string":"(children : Array(Span))","args_html":"(children : Array(<a href=\"../../OpenTelemetry/API/Span.html\">Span</a>))","location":{"filename":"src/api/span.cr","line_number":24,"url":null},"def":{"name":"children=","args":[{"name":"children","external_name":"children","restriction":"Array(Span)"}],"visibility":"Public","body":"@children = children"}},{"html_id":"client!-instance-method","name":"client!","abstract":false,"location":{"filename":"src/api/span.cr","line_number":66,"url":null},"def":{"name":"client!","visibility":"Public","body":""}},{"html_id":"consumer!-instance-method","name":"consumer!","abstract":false,"location":{"filename":"src/api/span.cr","line_number":75,"url":null},"def":{"name":"consumer!","visibility":"Public","body":""}},{"html_id":"context:SpanContext-instance-method","name":"context","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":false,"location":{"filename":"src/api/span.cr","line_number":25,"url":null},"def":{"name":"context","return_type":"SpanContext","visibility":"Public","body":"@context"}},{"html_id":"context=(context:SpanContext)-instance-method","name":"context=","abstract":false,"args":[{"name":"context","external_name":"context","restriction":"SpanContext"}],"args_string":"(context : SpanContext)","args_html":"(context : <a href=\"../../OpenTelemetry/API/SpanContext.html\">SpanContext</a>)","location":{"filename":"src/api/span.cr","line_number":25,"url":null},"def":{"name":"context=","args":[{"name":"context","external_name":"context","restriction":"SpanContext"}],"visibility":"Public","body":"@context = context"}},{"html_id":"events:Array(Event)-instance-method","name":"events","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":false,"location":{"filename":"src/api/span.cr","line_number":21,"url":null},"def":{"name":"events","return_type":"Array(Event)","visibility":"Public","body":"@events"}},{"html_id":"events=(events:Array(Event))-instance-method","name":"events=","abstract":false,"args":[{"name":"events","external_name":"events","restriction":"Array(Event)"}],"args_string":"(events : Array(Event))","args_html":"(events : Array(<a href=\"../../OpenTelemetry/API/Event.html\">Event</a>))","location":{"filename":"src/api/span.cr","line_number":21,"url":null},"def":{"name":"events=","args":[{"name":"events","external_name":"events","restriction":"Array(Event)"}],"visibility":"Public","body":"@events = events"}},{"html_id":"finish:Time::Span?-instance-method","name":"finish","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":false,"location":{"filename":"src/api/span.cr","line_number":19,"url":null},"def":{"name":"finish","return_type":"Time::Span | ::Nil","visibility":"Public","body":"@finish"}},{"html_id":"finish=(finish:Time::Span?)-instance-method","name":"finish=","abstract":false,"args":[{"name":"finish","external_name":"finish","restriction":"Time::Span | ::Nil"}],"args_string":"(finish : Time::Span?)","args_html":"(finish : Time::Span?)","location":{"filename":"src/api/span.cr","line_number":19,"url":null},"def":{"name":"finish=","args":[{"name":"finish","external_name":"finish","restriction":"Time::Span | ::Nil"}],"visibility":"Public","body":"@finish = finish"}},{"html_id":"get_attribute(key)-instance-method","name":"get_attribute","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/api/span.cr","line_number":47,"url":null},"def":{"name":"get_attribute","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":""}},{"html_id":"id-instance-method","name":"id","abstract":false,"location":{"filename":"src/api/span.cr","line_number":60,"url":null},"def":{"name":"id","visibility":"Public","body":""}},{"html_id":"internal!-instance-method","name":"internal!","abstract":false,"location":{"filename":"src/api/span.cr","line_number":78,"url":null},"def":{"name":"internal!","visibility":"Public","body":""}},{"html_id":"is_recording:Bool-instance-method","name":"is_recording","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":false,"location":{"filename":"src/api/span.cr","line_number":28,"url":null},"def":{"name":"is_recording","return_type":"Bool","visibility":"Public","body":"@is_recording"}},{"html_id":"is_recording=(is_recording:Bool)-instance-method","name":"is_recording=","abstract":false,"args":[{"name":"is_recording","external_name":"is_recording","restriction":"Bool"}],"args_string":"(is_recording : Bool)","args_html":"(is_recording : Bool)","location":{"filename":"src/api/span.cr","line_number":28,"url":null},"def":{"name":"is_recording=","args":[{"name":"is_recording","external_name":"is_recording","restriction":"Bool"}],"visibility":"Public","body":"@is_recording = is_recording"}},{"html_id":"kind:Kind-instance-method","name":"kind","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":false,"location":{"filename":"src/api/span.cr","line_number":26,"url":null},"def":{"name":"kind","return_type":"Kind","visibility":"Public","body":"@kind"}},{"html_id":"kind=(kind:Kind)-instance-method","name":"kind=","abstract":false,"args":[{"name":"kind","external_name":"kind","restriction":"Kind"}],"args_string":"(kind : Kind)","args_html":"(kind : <a href=\"../../OpenTelemetry/API/Span/Kind.html\">Kind</a>)","location":{"filename":"src/api/span.cr","line_number":26,"url":null},"def":{"name":"kind=","args":[{"name":"kind","external_name":"kind","restriction":"Kind"}],"visibility":"Public","body":"@kind = kind"}},{"html_id":"name:String-instance-method","name":"name","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":false,"location":{"filename":"src/api/span.cr","line_number":16,"url":null},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"name=(name:String)-instance-method","name":"name=","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/api/span.cr","line_number":16,"url":null},"def":{"name":"name=","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"@name = name"}},{"html_id":"parent:Span?-instance-method","name":"parent","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":false,"location":{"filename":"src/api/span.cr","line_number":23,"url":null},"def":{"name":"parent","return_type":"Span | ::Nil","visibility":"Public","body":"@parent"}},{"html_id":"parent=(parent:Span?)-instance-method","name":"parent=","abstract":false,"args":[{"name":"parent","external_name":"parent","restriction":"Span | ::Nil"}],"args_string":"(parent : Span?)","args_html":"(parent : <a href=\"../../OpenTelemetry/API/Span.html\">Span</a>?)","location":{"filename":"src/api/span.cr","line_number":23,"url":null},"def":{"name":"parent=","args":[{"name":"parent","external_name":"parent","restriction":"Span | ::Nil"}],"visibility":"Public","body":"@parent = parent"}},{"html_id":"producer!-instance-method","name":"producer!","abstract":false,"location":{"filename":"src/api/span.cr","line_number":72,"url":null},"def":{"name":"producer!","visibility":"Public","body":""}},{"html_id":"recording?-instance-method","name":"recording?","abstract":false,"location":{"filename":"src/api/span.cr","line_number":35,"url":null},"def":{"name":"recording?","visibility":"Public","body":""}},{"html_id":"server!-instance-method","name":"server!","abstract":false,"location":{"filename":"src/api/span.cr","line_number":69,"url":null},"def":{"name":"server!","visibility":"Public","body":""}},{"html_id":"set_attribute(key,value)-instance-method","name":"set_attribute","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key, value)","args_html":"(key, value)","location":{"filename":"src/api/span.cr","line_number":41,"url":null},"def":{"name":"set_attribute","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":""}},{"html_id":"span_id-instance-method","name":"span_id","abstract":false,"location":{"filename":"src/api/span.cr","line_number":63,"url":null},"def":{"name":"span_id","visibility":"Public","body":""}},{"html_id":"start:Time::Span-instance-method","name":"start","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":false,"location":{"filename":"src/api/span.cr","line_number":17,"url":null},"def":{"name":"start","return_type":"Time::Span","visibility":"Public","body":"@start"}},{"html_id":"start=(start:Time::Span)-instance-method","name":"start=","abstract":false,"args":[{"name":"start","external_name":"start","restriction":"Time::Span"}],"args_string":"(start : Time::Span)","args_html":"(start : Time::Span)","location":{"filename":"src/api/span.cr","line_number":17,"url":null},"def":{"name":"start=","args":[{"name":"start","external_name":"start","restriction":"Time::Span"}],"visibility":"Public","body":"@start = start"}},{"html_id":"status:Status-instance-method","name":"status","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":false,"location":{"filename":"src/api/span.cr","line_number":27,"url":null},"def":{"name":"status","return_type":"Status","visibility":"Public","body":"@status"}},{"html_id":"status=(status:Status)-instance-method","name":"status=","abstract":false,"args":[{"name":"status","external_name":"status","restriction":"Status"}],"args_string":"(status : Status)","args_html":"(status : <a href=\"../../OpenTelemetry/API/Status.html\">Status</a>)","location":{"filename":"src/api/span.cr","line_number":27,"url":null},"def":{"name":"status=","args":[{"name":"status","external_name":"status","restriction":"Status"}],"visibility":"Public","body":"@status = status"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/api/span.cr","line_number":91,"url":null},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":""}},{"html_id":"to_json-instance-method","name":"to_json","abstract":false,"location":{"filename":"src/api/span.cr","line_number":88,"url":null},"def":{"name":"to_json","visibility":"Public","body":""}},{"html_id":"to_protobuf-instance-method","name":"to_protobuf","doc":"Return the Protobuf object for the Span.","summary":"<p>Return the Protobuf object for the Span.</p>","abstract":false,"location":{"filename":"src/api/span.cr","line_number":85,"url":null},"def":{"name":"to_protobuf","visibility":"Public","body":""}},{"html_id":"wall_finish:Time?-instance-method","name":"wall_finish","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":false,"location":{"filename":"src/api/span.cr","line_number":20,"url":null},"def":{"name":"wall_finish","return_type":"Time | ::Nil","visibility":"Public","body":"@wall_finish"}},{"html_id":"wall_finish=(wall_finish:Time?)-instance-method","name":"wall_finish=","abstract":false,"args":[{"name":"wall_finish","external_name":"wall_finish","restriction":"Time | ::Nil"}],"args_string":"(wall_finish : Time?)","args_html":"(wall_finish : Time?)","location":{"filename":"src/api/span.cr","line_number":20,"url":null},"def":{"name":"wall_finish=","args":[{"name":"wall_finish","external_name":"wall_finish","restriction":"Time | ::Nil"}],"visibility":"Public","body":"@wall_finish = wall_finish"}},{"html_id":"wall_start:Time-instance-method","name":"wall_start","doc":"This is probably a property","summary":"<p>This is probably a property</p>","abstract":false,"location":{"filename":"src/api/span.cr","line_number":18,"url":null},"def":{"name":"wall_start","return_type":"Time","visibility":"Public","body":"@wall_start"}},{"html_id":"wall_start=(wall_start:Time)-instance-method","name":"wall_start=","abstract":false,"args":[{"name":"wall_start","external_name":"wall_start","restriction":"Time"}],"args_string":"(wall_start : Time)","args_html":"(wall_start : Time)","location":{"filename":"src/api/span.cr","line_number":18,"url":null},"def":{"name":"wall_start=","args":[{"name":"wall_start","external_name":"wall_start","restriction":"Time"}],"visibility":"Public","body":"@wall_start = wall_start"}}],"types":[{"html_id":"opentelemetry-api/OpenTelemetry/API/Span/Kind","path":"OpenTelemetry/API/Span/Kind.html","kind":"alias","full_name":"OpenTelemetry::API::Span::Kind","name":"Kind","abstract":false,"locations":[{"filename":"src/api/span/kind.cr","line_number":6,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":true,"aliased":"OpenTelemetry::API::AbstractSpan::Kind","aliased_html":"<a href=\"../../../OpenTelemetry/API/AbstractSpan/Kind.html\">OpenTelemetry::API::AbstractSpan::Kind</a>","const":false,"constants":[{"id":"Client","name":"Client","value":"3"},{"id":"Consumer","name":"Consumer","value":"5"},{"id":"Internal","name":"Internal","value":"1"},{"id":"Producer","name":"Producer","value":"4"},{"id":"Server","name":"Server","value":"2"},{"id":"Unspecified","name":"Unspecified","value":"0"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API/Span","kind":"class","full_name":"OpenTelemetry::API::Span","name":"Span"}}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/SpanContext","path":"OpenTelemetry/API/SpanContext.html","kind":"struct","full_name":"OpenTelemetry::API::SpanContext","name":"SpanContext","abstract":false,"superclass":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractSpanContext","kind":"struct","full_name":"OpenTelemetry::API::AbstractSpanContext","name":"AbstractSpanContext"},"ancestors":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractSpanContext","kind":"struct","full_name":"OpenTelemetry::API::AbstractSpanContext","name":"AbstractSpanContext"},{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/span_context.cr","line_number":5,"url":null},{"filename":"src/api/span_context/config.cr","line_number":5,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"class_methods":[{"html_id":"build(inherited_context:SpanContext?=nil,&)-class-method","name":"build","abstract":false,"args":[{"name":"inherited_context","default_value":"nil","external_name":"inherited_context","restriction":"SpanContext | ::Nil"}],"args_string":"(inherited_context : SpanContext? = nil, &)","args_html":"(inherited_context : <a href=\"../../OpenTelemetry/API/SpanContext.html\">SpanContext</a>? = <span class=\"n\">nil</span>, &)","location":{"filename":"src/api/span_context.cr","line_number":69,"url":null},"def":{"name":"build","args":[{"name":"inherited_context","default_value":"nil","external_name":"inherited_context","restriction":"SpanContext | ::Nil"}],"yields":1,"visibility":"Public","body":"if inherited_context\n  config = Config.new(inherited_context)\nelse\n  config = Config.new(Slice(UInt8).new(16, 0), IdGenerator.span_id)\nend\nyield config\nnew(config)\n"}}],"constructors":[{"html_id":"new(trace_id:Slice(UInt8),span_id:Slice(UInt8),parent_id:Slice(UInt8)?,trace_flags:OpenTelemetry::API::TraceFlags,trace_state:Hash(String,String),remote:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"trace_id","external_name":"trace_id","restriction":"::Slice(::UInt8)"},{"name":"span_id","external_name":"span_id","restriction":"::Slice(::UInt8)"},{"name":"parent_id","external_name":"parent_id","restriction":"::Slice(::UInt8) | ::Nil"},{"name":"trace_flags","external_name":"trace_flags","restriction":"::OpenTelemetry::API::TraceFlags"},{"name":"trace_state","external_name":"trace_state","restriction":"::Hash(::String, ::String)"},{"name":"remote","default_value":"false","external_name":"remote","restriction":"::Bool"}],"args_string":"(trace_id : Slice(UInt8), span_id : Slice(UInt8), parent_id : Slice(UInt8)?, trace_flags : OpenTelemetry::API::TraceFlags, trace_state : Hash(String, String), remote : Bool = false)","args_html":"(trace_id : Slice(UInt8), span_id : Slice(UInt8), parent_id : Slice(UInt8)?, trace_flags : <a href=\"../../OpenTelemetry/API/TraceFlags.html\">OpenTelemetry::API::TraceFlags</a>, trace_state : Hash(String, String), remote : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/api/span_context.cr","line_number":21,"url":null},"def":{"name":"new","args":[{"name":"trace_id","external_name":"trace_id","restriction":"::Slice(::UInt8)"},{"name":"span_id","external_name":"span_id","restriction":"::Slice(::UInt8)"},{"name":"parent_id","external_name":"parent_id","restriction":"::Slice(::UInt8) | ::Nil"},{"name":"trace_flags","external_name":"trace_flags","restriction":"::OpenTelemetry::API::TraceFlags"},{"name":"trace_state","external_name":"trace_state","restriction":"::Hash(::String, ::String)"},{"name":"remote","default_value":"false","external_name":"remote","restriction":"::Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(trace_id, span_id, parent_id, trace_flags, trace_state, remote)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(inherited_context:SpanContext)-class-method","name":"new","abstract":false,"args":[{"name":"inherited_context","external_name":"inherited_context","restriction":"SpanContext"}],"args_string":"(inherited_context : SpanContext)","args_html":"(inherited_context : <a href=\"../../OpenTelemetry/API/SpanContext.html\">SpanContext</a>)","location":{"filename":"src/api/span_context.cr","line_number":24,"url":null},"def":{"name":"new","args":[{"name":"inherited_context","external_name":"inherited_context","restriction":"SpanContext"}],"visibility":"Public","body":"_ = allocate\n_.initialize(inherited_context)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(configuration:Config)-class-method","name":"new","abstract":false,"args":[{"name":"configuration","external_name":"configuration","restriction":"Config"}],"args_string":"(configuration : Config)","args_html":"(configuration : <a href=\"../../OpenTelemetry/API/SpanContext/Config.html\">Config</a>)","location":{"filename":"src/api/span_context.cr","line_number":33,"url":null},"def":{"name":"new","args":[{"name":"configuration","external_name":"configuration","restriction":"Config"}],"visibility":"Public","body":"_ = allocate\n_.initialize(configuration)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/api/span_context.cr","line_number":15,"url":null},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"[](val)-instance-method","name":"[]","abstract":false,"args":[{"name":"val","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/api/span_context.cr","line_number":60,"url":null},"def":{"name":"[]","args":[{"name":"val","external_name":"val","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]=(val,val2)-instance-method","name":"[]=","abstract":false,"args":[{"name":"val","external_name":"val","restriction":""},{"name":"val2","external_name":"val2","restriction":""}],"args_string":"(val, val2)","args_html":"(val, val2)","location":{"filename":"src/api/span_context.cr","line_number":66,"url":null},"def":{"name":"[]=","args":[{"name":"val","external_name":"val","restriction":""},{"name":"val2","external_name":"val2","restriction":""}],"visibility":"Public","body":""}},{"html_id":"[]?(val)-instance-method","name":"[]?","abstract":false,"args":[{"name":"val","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/api/span_context.cr","line_number":63,"url":null},"def":{"name":"[]?","args":[{"name":"val","external_name":"val","restriction":""}],"visibility":"Public","body":""}},{"html_id":"is_remote-instance-method","name":"is_remote","doc":"The spec dictates that this name be available: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#isvalid","summary":"<p>The spec dictates that this name be available: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#isvalid</p>","abstract":false,"location":{"filename":"src/api/span_context.cr","line_number":56,"url":null},"def":{"name":"is_remote","visibility":"Public","body":"remote?"}},{"html_id":"is_valid-instance-method","name":"is_valid","doc":"The spec dictates that this name be available: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#isvalid","summary":"<p>The spec dictates that this name be available: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md#isvalid</p>","abstract":false,"location":{"filename":"src/api/span_context.cr","line_number":48,"url":null},"def":{"name":"is_valid","visibility":"Public","body":"valid?"}},{"html_id":"parent_id:Slice(UInt8)?-instance-method","name":"parent_id","doc":"This is probably going to be a property","summary":"<p>This is probably going to be a property</p>","abstract":false,"location":{"filename":"src/api/span_context.cr","line_number":8,"url":null},"def":{"name":"parent_id","return_type":"Slice(UInt8) | ::Nil","visibility":"Public","body":"@parent_id"}},{"html_id":"parent_id=(parent_id:Slice(UInt8)?)-instance-method","name":"parent_id=","abstract":false,"args":[{"name":"parent_id","external_name":"parent_id","restriction":"Slice(UInt8) | ::Nil"}],"args_string":"(parent_id : Slice(UInt8)?)","args_html":"(parent_id : Slice(UInt8)?)","location":{"filename":"src/api/span_context.cr","line_number":8,"url":null},"def":{"name":"parent_id=","args":[{"name":"parent_id","external_name":"parent_id","restriction":"Slice(UInt8) | ::Nil"}],"visibility":"Public","body":"@parent_id = parent_id"}},{"html_id":"remote:Bool-instance-method","name":"remote","doc":"This is probably going to be a property","summary":"<p>This is probably going to be a property</p>","abstract":false,"location":{"filename":"src/api/span_context.cr","line_number":13,"url":null},"def":{"name":"remote","return_type":"Bool","visibility":"Public","body":"@remote"}},{"html_id":"remote=(remote:Bool)-instance-method","name":"remote=","abstract":false,"args":[{"name":"remote","external_name":"remote","restriction":"Bool"}],"args_string":"(remote : Bool)","args_html":"(remote : Bool)","location":{"filename":"src/api/span_context.cr","line_number":13,"url":null},"def":{"name":"remote=","args":[{"name":"remote","external_name":"remote","restriction":"Bool"}],"visibility":"Public","body":"@remote = remote"}},{"html_id":"remote?-instance-method","name":"remote?","abstract":false,"location":{"filename":"src/api/span_context.cr","line_number":52,"url":null},"def":{"name":"remote?","visibility":"Public","body":""}},{"html_id":"span_id:Slice(UInt8)-instance-method","name":"span_id","doc":"This is probably going to be a property","summary":"<p>This is probably going to be a property</p>","abstract":false,"location":{"filename":"src/api/span_context.cr","line_number":7,"url":null},"def":{"name":"span_id","return_type":"Slice(UInt8)","visibility":"Public","body":"@span_id"}},{"html_id":"span_id=(span_id:Slice(UInt8))-instance-method","name":"span_id=","abstract":false,"args":[{"name":"span_id","external_name":"span_id","restriction":"Slice(UInt8)"}],"args_string":"(span_id : Slice(UInt8))","args_html":"(span_id : Slice(UInt8))","location":{"filename":"src/api/span_context.cr","line_number":7,"url":null},"def":{"name":"span_id=","args":[{"name":"span_id","external_name":"span_id","restriction":"Slice(UInt8)"}],"visibility":"Public","body":"@span_id = span_id"}},{"html_id":"trace_flags:TraceFlags-instance-method","name":"trace_flags","doc":"This is probably going to be a property","summary":"<p>This is probably going to be a property</p>","abstract":false,"location":{"filename":"src/api/span_context.cr","line_number":9,"url":null},"def":{"name":"trace_flags","return_type":"TraceFlags","visibility":"Public","body":"@trace_flags"}},{"html_id":"trace_flags=(trace_flags:TraceFlags)-instance-method","name":"trace_flags=","abstract":false,"args":[{"name":"trace_flags","external_name":"trace_flags","restriction":"TraceFlags"}],"args_string":"(trace_flags : TraceFlags)","args_html":"(trace_flags : <a href=\"../../OpenTelemetry/API/TraceFlags.html\">TraceFlags</a>)","location":{"filename":"src/api/span_context.cr","line_number":9,"url":null},"def":{"name":"trace_flags=","args":[{"name":"trace_flags","external_name":"trace_flags","restriction":"TraceFlags"}],"visibility":"Public","body":"@trace_flags = trace_flags"}},{"html_id":"trace_id:Slice(UInt8)-instance-method","name":"trace_id","doc":"This is probably going to be a property","summary":"<p>This is probably going to be a property</p>","abstract":false,"location":{"filename":"src/api/span_context.cr","line_number":6,"url":null},"def":{"name":"trace_id","return_type":"Slice(UInt8)","visibility":"Public","body":"@trace_id"}},{"html_id":"trace_id=(trace_id:Slice(UInt8))-instance-method","name":"trace_id=","abstract":false,"args":[{"name":"trace_id","external_name":"trace_id","restriction":"Slice(UInt8)"}],"args_string":"(trace_id : Slice(UInt8))","args_html":"(trace_id : Slice(UInt8))","location":{"filename":"src/api/span_context.cr","line_number":6,"url":null},"def":{"name":"trace_id=","args":[{"name":"trace_id","external_name":"trace_id","restriction":"Slice(UInt8)"}],"visibility":"Public","body":"@trace_id = trace_id"}},{"html_id":"trace_state:Hash(String,String)-instance-method","name":"trace_state","doc":"TODO: We're currenty playing fast and loose with TraceState. TraceState, per the spec,\nshould be immutable, however, so this will need to be revised.","summary":"<p><span class=\"flag orange\">TODO</span>  We're currenty playing fast and loose with TraceState.</p>","abstract":false,"location":{"filename":"src/api/span_context.cr","line_number":12,"url":null},"def":{"name":"trace_state","return_type":"Hash(String, String)","visibility":"Public","body":"@trace_state"}},{"html_id":"trace_state=(trace_state:Hash(String,String))-instance-method","name":"trace_state=","doc":"TODO: We're currenty playing fast and loose with TraceState. TraceState, per the spec,\nshould be immutable, however, so this will need to be revised.","summary":"<p><span class=\"flag orange\">TODO</span>  We're currenty playing fast and loose with TraceState.</p>","abstract":false,"args":[{"name":"trace_state","external_name":"trace_state","restriction":"Hash(String, String)"}],"args_string":"(trace_state : Hash(String, String))","args_html":"(trace_state : Hash(String, String))","location":{"filename":"src/api/span_context.cr","line_number":12,"url":null},"def":{"name":"trace_state=","args":[{"name":"trace_state","external_name":"trace_state","restriction":"Hash(String, String)"}],"visibility":"Public","body":"@trace_state = trace_state"}},{"html_id":"valid?-instance-method","name":"valid?","doc":"Returns true is the trace id and span id are non-zero","summary":"<p>Returns true is the trace id and span id are non-zero</p>","abstract":false,"location":{"filename":"src/api/span_context.cr","line_number":44,"url":null},"def":{"name":"valid?","visibility":"Public","body":""}}],"types":[{"html_id":"opentelemetry-api/OpenTelemetry/API/SpanContext/Config","path":"OpenTelemetry/API/SpanContext/Config.html","kind":"class","full_name":"OpenTelemetry::API::SpanContext::Config","name":"Config","abstract":false,"superclass":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractSpanContext/AbstractConfig","kind":"class","full_name":"OpenTelemetry::API::AbstractSpanContext::AbstractConfig","name":"AbstractConfig"},"ancestors":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractSpanContext/AbstractConfig","kind":"class","full_name":"OpenTelemetry::API::AbstractSpanContext::AbstractConfig","name":"AbstractConfig"},{"html_id":"opentelemetry-api/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/span_context/config.cr","line_number":6,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API/SpanContext","kind":"struct","full_name":"OpenTelemetry::API::SpanContext","name":"SpanContext"},"constructors":[{"html_id":"new(trace_id:Slice(UInt8),span_id:Slice(UInt8),parent_id:Slice(UInt8)?=nil)-class-method","name":"new","abstract":false,"args":[{"name":"trace_id","external_name":"trace_id","restriction":"::Slice(::UInt8)"},{"name":"span_id","external_name":"span_id","restriction":"::Slice(::UInt8)"},{"name":"parent_id","default_value":"nil","external_name":"parent_id","restriction":"::Slice(::UInt8) | ::Nil"}],"args_string":"(trace_id : Slice(UInt8), span_id : Slice(UInt8), parent_id : Slice(UInt8)? = nil)","args_html":"(trace_id : Slice(UInt8), span_id : Slice(UInt8), parent_id : Slice(UInt8)? = <span class=\"n\">nil</span>)","location":{"filename":"src/api/span_context/config.cr","line_number":14,"url":null},"def":{"name":"new","args":[{"name":"trace_id","external_name":"trace_id","restriction":"::Slice(::UInt8)"},{"name":"span_id","external_name":"span_id","restriction":"::Slice(::UInt8)"},{"name":"parent_id","default_value":"nil","external_name":"parent_id","restriction":"::Slice(::UInt8) | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(trace_id, span_id, parent_id)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(inherited_context:SpanContext)-class-method","name":"new","abstract":false,"args":[{"name":"inherited_context","external_name":"inherited_context","restriction":"SpanContext"}],"args_string":"(inherited_context : SpanContext)","args_html":"(inherited_context : <a href=\"../../../OpenTelemetry/API/SpanContext.html\">SpanContext</a>)","location":{"filename":"src/api/span_context/config.cr","line_number":18,"url":null},"def":{"name":"new","args":[{"name":"inherited_context","external_name":"inherited_context","restriction":"SpanContext"}],"visibility":"Public","body":"_ = allocate\n_.initialize(inherited_context)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"parent_id:Slice(UInt8)?-instance-method","name":"parent_id","doc":"Likely defined as a property","summary":"<p>Likely defined as a property</p>","abstract":false,"location":{"filename":"src/api/span_context/config.cr","line_number":9,"url":null},"def":{"name":"parent_id","return_type":"Slice(UInt8) | ::Nil","visibility":"Public","body":"@parent_id"}},{"html_id":"parent_id=(parent_id:Slice(UInt8)?)-instance-method","name":"parent_id=","abstract":false,"args":[{"name":"parent_id","external_name":"parent_id","restriction":"Slice(UInt8) | ::Nil"}],"args_string":"(parent_id : Slice(UInt8)?)","args_html":"(parent_id : Slice(UInt8)?)","location":{"filename":"src/api/span_context/config.cr","line_number":9,"url":null},"def":{"name":"parent_id=","args":[{"name":"parent_id","external_name":"parent_id","restriction":"Slice(UInt8) | ::Nil"}],"visibility":"Public","body":"@parent_id = parent_id"}},{"html_id":"remote:Bool-instance-method","name":"remote","doc":"Likely defined as a property","summary":"<p>Likely defined as a property</p>","abstract":false,"location":{"filename":"src/api/span_context/config.cr","line_number":12,"url":null},"def":{"name":"remote","return_type":"Bool","visibility":"Public","body":"@remote"}},{"html_id":"remote=(remote:Bool)-instance-method","name":"remote=","abstract":false,"args":[{"name":"remote","external_name":"remote","restriction":"Bool"}],"args_string":"(remote : Bool)","args_html":"(remote : Bool)","location":{"filename":"src/api/span_context/config.cr","line_number":12,"url":null},"def":{"name":"remote=","args":[{"name":"remote","external_name":"remote","restriction":"Bool"}],"visibility":"Public","body":"@remote = remote"}},{"html_id":"span_id:Slice(UInt8)-instance-method","name":"span_id","doc":"Likely defined as a property","summary":"<p>Likely defined as a property</p>","abstract":false,"location":{"filename":"src/api/span_context/config.cr","line_number":8,"url":null},"def":{"name":"span_id","return_type":"Slice(UInt8)","visibility":"Public","body":"@span_id"}},{"html_id":"span_id=(span_id:Slice(UInt8))-instance-method","name":"span_id=","abstract":false,"args":[{"name":"span_id","external_name":"span_id","restriction":"Slice(UInt8)"}],"args_string":"(span_id : Slice(UInt8))","args_html":"(span_id : Slice(UInt8))","location":{"filename":"src/api/span_context/config.cr","line_number":8,"url":null},"def":{"name":"span_id=","args":[{"name":"span_id","external_name":"span_id","restriction":"Slice(UInt8)"}],"visibility":"Public","body":"@span_id = span_id"}},{"html_id":"trace_flags:TraceFlags-instance-method","name":"trace_flags","doc":"Likely defined as a property","summary":"<p>Likely defined as a property</p>","abstract":false,"location":{"filename":"src/api/span_context/config.cr","line_number":10,"url":null},"def":{"name":"trace_flags","return_type":"TraceFlags","visibility":"Public","body":"@trace_flags"}},{"html_id":"trace_flags=(trace_flags:TraceFlags)-instance-method","name":"trace_flags=","abstract":false,"args":[{"name":"trace_flags","external_name":"trace_flags","restriction":"TraceFlags"}],"args_string":"(trace_flags : TraceFlags)","args_html":"(trace_flags : <a href=\"../../../OpenTelemetry/API/TraceFlags.html\">TraceFlags</a>)","location":{"filename":"src/api/span_context/config.cr","line_number":10,"url":null},"def":{"name":"trace_flags=","args":[{"name":"trace_flags","external_name":"trace_flags","restriction":"TraceFlags"}],"visibility":"Public","body":"@trace_flags = trace_flags"}},{"html_id":"trace_id:Slice(UInt8)-instance-method","name":"trace_id","doc":"Likely defined as a property","summary":"<p>Likely defined as a property</p>","abstract":false,"location":{"filename":"src/api/span_context/config.cr","line_number":7,"url":null},"def":{"name":"trace_id","return_type":"Slice(UInt8)","visibility":"Public","body":"@trace_id"}},{"html_id":"trace_id=(trace_id:Slice(UInt8))-instance-method","name":"trace_id=","abstract":false,"args":[{"name":"trace_id","external_name":"trace_id","restriction":"Slice(UInt8)"}],"args_string":"(trace_id : Slice(UInt8))","args_html":"(trace_id : Slice(UInt8))","location":{"filename":"src/api/span_context/config.cr","line_number":7,"url":null},"def":{"name":"trace_id=","args":[{"name":"trace_id","external_name":"trace_id","restriction":"Slice(UInt8)"}],"visibility":"Public","body":"@trace_id = trace_id"}},{"html_id":"trace_state:Hash(String,String)-instance-method","name":"trace_state","doc":"Likely defined as a property","summary":"<p>Likely defined as a property</p>","abstract":false,"location":{"filename":"src/api/span_context/config.cr","line_number":11,"url":null},"def":{"name":"trace_state","return_type":"Hash(String, String)","visibility":"Public","body":"@trace_state"}},{"html_id":"trace_state=(trace_state:Hash(String,String))-instance-method","name":"trace_state=","abstract":false,"args":[{"name":"trace_state","external_name":"trace_state","restriction":"Hash(String, String)"}],"args_string":"(trace_state : Hash(String, String))","args_html":"(trace_state : Hash(String, String))","location":{"filename":"src/api/span_context/config.cr","line_number":11,"url":null},"def":{"name":"trace_state=","args":[{"name":"trace_state","external_name":"trace_state","restriction":"Hash(String, String)"}],"visibility":"Public","body":"@trace_state = trace_state"}}]}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/Status","path":"OpenTelemetry/API/Status.html","kind":"struct","full_name":"OpenTelemetry::API::Status","name":"Status","abstract":false,"superclass":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractStatus","kind":"struct","full_name":"OpenTelemetry::API::AbstractStatus","name":"AbstractStatus"},"ancestors":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractStatus","kind":"struct","full_name":"OpenTelemetry::API::AbstractStatus","name":"AbstractStatus"},{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/status.cr","line_number":5,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"constructors":[{"html_id":"new(code:OpenTelemetry::API::AbstractStatus::StatusCode=StatusCode::Unset,message:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"code","default_value":"StatusCode::Unset","external_name":"code","restriction":"::OpenTelemetry::API::AbstractStatus::StatusCode"},{"name":"message","default_value":"\"\"","external_name":"message","restriction":"::String"}],"args_string":"(code : OpenTelemetry::API::AbstractStatus::StatusCode = StatusCode::Unset, message : String = \"\")","args_html":"(code : <a href=\"../../OpenTelemetry/API/AbstractStatus/StatusCode.html\">OpenTelemetry::API::AbstractStatus::StatusCode</a> = <span class=\"t\">StatusCode</span><span class=\"t\">::</span><span class=\"t\">Unset</span>, message : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/api/status.cr","line_number":11,"url":null},"def":{"name":"new","args":[{"name":"code","default_value":"StatusCode::Unset","external_name":"code","restriction":"::OpenTelemetry::API::AbstractStatus::StatusCode"},{"name":"message","default_value":"\"\"","external_name":"message","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(code, message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"code:StatusCode-instance-method","name":"code","doc":"This is assumed to be implemented as a property in the SDK.","summary":"<p>This is assumed to be implemented as a property in the SDK.</p>","abstract":false,"location":{"filename":"src/api/status.cr","line_number":6,"url":null},"def":{"name":"code","return_type":"StatusCode","visibility":"Public","body":"@code"}},{"html_id":"code=(code:StatusCode)-instance-method","name":"code=","abstract":false,"args":[{"name":"code","external_name":"code","restriction":"StatusCode"}],"args_string":"(code : StatusCode)","args_html":"(code : <a href=\"../../OpenTelemetry/API/Status/StatusCode.html\">StatusCode</a>)","location":{"filename":"src/api/status.cr","line_number":6,"url":null},"def":{"name":"code=","args":[{"name":"code","external_name":"code","restriction":"StatusCode"}],"visibility":"Public","body":"@code = code"}},{"html_id":"error!(message=nil)-instance-method","name":"error!","abstract":false,"args":[{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"args_string":"(message = nil)","args_html":"(message = <span class=\"n\">nil</span>)","location":{"filename":"src/api/status.cr","line_number":17,"url":null},"def":{"name":"error!","args":[{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"visibility":"Public","body":""}},{"html_id":"message:String-instance-method","name":"message","doc":"This is assumed to be implemented as a property in the SDK.","summary":"<p>This is assumed to be implemented as a property in the SDK.</p>","abstract":false,"location":{"filename":"src/api/status.cr","line_number":7,"url":null},"def":{"name":"message","return_type":"String","visibility":"Public","body":"@message"}},{"html_id":"message=(message:String)-instance-method","name":"message=","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(message : String)","args_html":"(message : String)","location":{"filename":"src/api/status.cr","line_number":7,"url":null},"def":{"name":"message=","args":[{"name":"message","external_name":"message","restriction":"String"}],"visibility":"Public","body":"@message = message"}},{"html_id":"ok!(message=nil)-instance-method","name":"ok!","abstract":false,"args":[{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"args_string":"(message = nil)","args_html":"(message = <span class=\"n\">nil</span>)","location":{"filename":"src/api/status.cr","line_number":14,"url":null},"def":{"name":"ok!","args":[{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"visibility":"Public","body":""}},{"html_id":"pb_status_code-instance-method","name":"pb_status_code","abstract":false,"location":{"filename":"src/api/status.cr","line_number":23,"url":null},"def":{"name":"pb_status_code","visibility":"Public","body":""}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/api/status.cr","line_number":32,"url":null},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":""}},{"html_id":"to_json-instance-method","name":"to_json","abstract":false,"location":{"filename":"src/api/status.cr","line_number":29,"url":null},"def":{"name":"to_json","visibility":"Public","body":""}},{"html_id":"to_protobuf-instance-method","name":"to_protobuf","abstract":false,"location":{"filename":"src/api/status.cr","line_number":26,"url":null},"def":{"name":"to_protobuf","visibility":"Public","body":""}},{"html_id":"unset!(message=nil)-instance-method","name":"unset!","abstract":false,"args":[{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"args_string":"(message = nil)","args_html":"(message = <span class=\"n\">nil</span>)","location":{"filename":"src/api/status.cr","line_number":20,"url":null},"def":{"name":"unset!","args":[{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"visibility":"Public","body":""}}],"types":[{"html_id":"opentelemetry-api/OpenTelemetry/API/Status/StatusCode","path":"OpenTelemetry/API/Status/StatusCode.html","kind":"alias","full_name":"OpenTelemetry::API::Status::StatusCode","name":"StatusCode","abstract":false,"locations":[{"filename":"src/api/status.cr","line_number":9,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":true,"aliased":"OpenTelemetry::API::AbstractStatus::StatusCode","aliased_html":"<a href=\"../../../OpenTelemetry/API/AbstractStatus/StatusCode.html\">OpenTelemetry::API::AbstractStatus::StatusCode</a>","const":false,"constants":[{"id":"Error","name":"Error","value":"2"},{"id":"Ok","name":"Ok","value":"1"},{"id":"Unset","name":"Unset","value":"0"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API/Status","kind":"struct","full_name":"OpenTelemetry::API::Status","name":"Status"}}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/TextMapPropagator","path":"OpenTelemetry/API/TextMapPropagator.html","kind":"struct","full_name":"OpenTelemetry::API::TextMapPropagator","name":"TextMapPropagator","abstract":false,"superclass":{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractTextMapPropagator","kind":"struct","full_name":"OpenTelemetry::API::AbstractTextMapPropagator","name":"AbstractTextMapPropagator"},"ancestors":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractTextMapPropagator","kind":"struct","full_name":"OpenTelemetry::API::AbstractTextMapPropagator","name":"AbstractTextMapPropagator"},{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/text_map_propagator.cr","line_number":4,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"instance_methods":[{"html_id":"extract(carrier,context:OpenTelemetry::Context)-instance-method","name":"extract","abstract":false,"args":[{"name":"carrier","external_name":"carrier","restriction":""},{"name":"context","external_name":"context","restriction":"OpenTelemetry::Context"}],"args_string":"(carrier, context : OpenTelemetry::Context)","args_html":"(carrier, context : <a href=\"../../OpenTelemetry/Context.html\">OpenTelemetry::Context</a>)","location":{"filename":"src/api/text_map_propagator.cr","line_number":8,"url":null},"def":{"name":"extract","args":[{"name":"carrier","external_name":"carrier","restriction":""},{"name":"context","external_name":"context","restriction":"OpenTelemetry::Context"}],"visibility":"Public","body":""}},{"html_id":"fields-instance-method","name":"fields","abstract":false,"location":{"filename":"src/api/text_map_propagator.cr","line_number":11,"url":null},"def":{"name":"fields","visibility":"Public","body":""}},{"html_id":"inject(carrier,context:OpenTelemetry::Context)-instance-method","name":"inject","abstract":false,"args":[{"name":"carrier","external_name":"carrier","restriction":""},{"name":"context","external_name":"context","restriction":"OpenTelemetry::Context"}],"args_string":"(carrier, context : OpenTelemetry::Context)","args_html":"(carrier, context : <a href=\"../../OpenTelemetry/Context.html\">OpenTelemetry::Context</a>)","location":{"filename":"src/api/text_map_propagator.cr","line_number":5,"url":null},"def":{"name":"inject","args":[{"name":"carrier","external_name":"carrier","restriction":""},{"name":"context","external_name":"context","restriction":"OpenTelemetry::Context"}],"visibility":"Public","body":""}}]},{"html_id":"opentelemetry-api/OpenTelemetry/API/TraceFlags","path":"OpenTelemetry/API/TraceFlags.html","kind":"enum","full_name":"OpenTelemetry::API::TraceFlags","name":"TraceFlags","abstract":false,"ancestors":[{"html_id":"opentelemetry-api/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"opentelemetry-api/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/api/trace_flags.cr","line_number":4,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Sampled","name":"Sampled","value":"1"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry/API","kind":"module","full_name":"OpenTelemetry::API","name":"API"},"instance_methods":[{"html_id":"none?-instance-method","name":"none?","abstract":false,"location":{"filename":"src/api/trace_flags.cr","line_number":4,"url":null},"def":{"name":"none?","visibility":"Public","body":"value == 0"}},{"html_id":"sampled?-instance-method","name":"sampled?","abstract":false,"location":{"filename":"src/api/trace_flags.cr","line_number":5,"url":null},"def":{"name":"sampled?","visibility":"Public","body":"self.includes?(Sampled)"}}]}]},{"html_id":"opentelemetry-api/OpenTelemetry/Attribute","path":"OpenTelemetry/Attribute.html","kind":"struct","full_name":"OpenTelemetry::Attribute(K)","name":"Attribute","abstract":false,"superclass":{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"opentelemetry-api/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"opentelemetry-api/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"opentelemetry-api/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/attribute.cr","line_number":8,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry","kind":"module","full_name":"OpenTelemetry","name":"OpenTelemetry"},"class_methods":[{"html_id":"from_a(ary)-class-method","name":"from_a","abstract":false,"args":[{"name":"ary","external_name":"ary","restriction":""}],"args_string":"(ary)","args_html":"(ary)","location":{"filename":"src/attribute.cr","line_number":33,"url":null},"def":{"name":"from_a","args":[{"name":"ary","external_name":"ary","restriction":""}],"visibility":"Public","body":"new(key: ary[0], value: ary[1])"}},{"html_id":"from_h(hash)-class-method","name":"from_h","abstract":false,"args":[{"name":"hash","external_name":"hash","restriction":""}],"args_string":"(hash)","args_html":"(hash)","location":{"filename":"src/attribute.cr","line_number":29,"url":null},"def":{"name":"from_h","args":[{"name":"hash","external_name":"hash","restriction":""}],"visibility":"Public","body":"new(key: hash[\"key\"], value: hash[\"value\"])"}},{"html_id":"to_anyvalue(attribute)-class-method","name":"to_anyvalue","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":""}],"args_string":"(attribute)","args_html":"(attribute)","location":{"filename":"src/attribute.cr","line_number":12,"url":null},"def":{"name":"to_anyvalue","args":[{"name":"attribute","external_name":"attribute","restriction":""}],"visibility":"Public","body":"case val = attribute.value\nwhen String\n  Proto::Common::V1::AnyValue.new(string_value: val)\nwhen Bool\n  Proto::Common::V1::AnyValue.new(bool_value: val)\nwhen Int\n  Proto::Common::V1::AnyValue.new(int_value: val.to_i64)\nwhen Float\n  Proto::Common::V1::AnyValue.new(double_value: val.to_f64)\nwhen Time\n  Proto::Common::V1::AnyValue.new(string_value: val.iso8601)\nelse\n  Proto::Common::V1::AnyValue.new\nend"}}],"constructors":[{"html_id":"new(key:String,value:K)-class-method","name":"new","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"::String"},{"name":"value","external_name":"value","restriction":"K"}],"args_string":"(key : String, value : K)","args_html":"(key : String, value : K)","location":{"filename":"src/attribute.cr","line_number":41,"url":null},"def":{"name":"new","args":[{"name":"key","external_name":"key","restriction":"::String"},{"name":"value","external_name":"value","restriction":"K"}],"visibility":"Public","body":"_ = Attribute(K).allocate\n_.initialize(key, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(value:K)-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"K"}],"args_string":"(value : K)","args_html":"(value : K)","location":{"filename":"src/attribute.cr","line_number":37,"url":null},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"K"}],"visibility":"Public","body":"_ = Attribute(K).allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"key:String-instance-method","name":"key","abstract":false,"location":{"filename":"src/attribute.cr","line_number":9,"url":null},"def":{"name":"key","return_type":"String","visibility":"Public","body":"@key"}},{"html_id":"to_bool-instance-method","name":"to_bool","abstract":false,"location":{"filename":"src/attribute.cr","line_number":60,"url":null},"def":{"name":"to_bool","visibility":"Public","body":"!(!value)"}},{"html_id":"to_f-instance-method","name":"to_f","abstract":false,"location":{"filename":"src/attribute.cr","line_number":56,"url":null},"def":{"name":"to_f","visibility":"Public","body":"value.to_f64"}},{"html_id":"to_h-instance-method","name":"to_h","abstract":false,"location":{"filename":"src/attribute.cr","line_number":44,"url":null},"def":{"name":"to_h","visibility":"Public","body":"{key: value}"}},{"html_id":"to_i-instance-method","name":"to_i","abstract":false,"location":{"filename":"src/attribute.cr","line_number":52,"url":null},"def":{"name":"to_i","visibility":"Public","body":"value.to_i64"}},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/attribute.cr","line_number":48,"url":null},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"io << value"}},{"html_id":"value:K-instance-method","name":"value","abstract":false,"location":{"filename":"src/attribute.cr","line_number":10,"url":null},"def":{"name":"value","return_type":"K","visibility":"Public","body":"@value"}}]},{"html_id":"opentelemetry-api/OpenTelemetry/Context","path":"OpenTelemetry/Context.html","kind":"alias","full_name":"OpenTelemetry::Context","name":"Context","abstract":false,"locations":[{"filename":"src/api/context.cr","line_number":128,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":true,"aliased":"OpenTelemetry::API::Context","aliased_html":"<a href=\"../OpenTelemetry/API/Context.html\">OpenTelemetry::API::Context</a>","const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry","kind":"module","full_name":"OpenTelemetry","name":"OpenTelemetry"}},{"html_id":"opentelemetry-api/OpenTelemetry/Sendable","path":"OpenTelemetry/Sendable.html","kind":"module","full_name":"OpenTelemetry::Sendable","name":"Sendable","abstract":false,"locations":[{"filename":"src/api/sendable.cr","line_number":2,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractResource","kind":"class","full_name":"OpenTelemetry::API::AbstractResource","name":"AbstractResource"},{"html_id":"opentelemetry-api/OpenTelemetry/API/AbstractSpan","kind":"class","full_name":"OpenTelemetry::API::AbstractSpan","name":"AbstractSpan"},{"html_id":"opentelemetry-api/OpenTelemetry/API/Span","kind":"class","full_name":"OpenTelemetry::API::Span","name":"Span"}],"namespace":{"html_id":"opentelemetry-api/OpenTelemetry","kind":"module","full_name":"OpenTelemetry","name":"OpenTelemetry"},"instance_methods":[{"html_id":"size-instance-method","name":"size","abstract":false,"location":{"filename":"src/api/sendable.cr","line_number":7,"url":null},"def":{"name":"size","visibility":"Public","body":"1"}},{"html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","abstract":true,"args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","args_html":"(json : JSON::Builder)","location":{"filename":"src/api/sendable.cr","line_number":4,"url":null},"def":{"name":"to_json","args":[{"name":"json","external_name":"json","restriction":"JSON::Builder"}],"visibility":"Public","body":""}},{"html_id":"to_json-instance-method","name":"to_json","abstract":true,"location":{"filename":"src/api/sendable.cr","line_number":5,"url":null},"def":{"name":"to_json","visibility":"Public","body":""}},{"html_id":"to_protobuf-instance-method","name":"to_protobuf","abstract":true,"location":{"filename":"src/api/sendable.cr","line_number":3,"url":null},"def":{"name":"to_protobuf","visibility":"Public","body":""}}]},{"html_id":"opentelemetry-api/OpenTelemetry/ValueArrays","path":"OpenTelemetry/ValueArrays.html","kind":"alias","full_name":"OpenTelemetry::ValueArrays","name":"ValueArrays","abstract":false,"locations":[{"filename":"src/attribute.cr","line_number":5,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":true,"aliased":"(Array(Bool) | Array(Float64) | Array(Int32) | Array(Int64) | Array(String))","aliased_html":"Array(Bool) | Array(Float64) | Array(Int32) | Array(Int64) | Array(String)","const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry","kind":"module","full_name":"OpenTelemetry","name":"OpenTelemetry"}},{"html_id":"opentelemetry-api/OpenTelemetry/ValueType","path":"OpenTelemetry/ValueType.html","kind":"alias","full_name":"OpenTelemetry::ValueType","name":"ValueType","abstract":false,"locations":[{"filename":"src/attribute.cr","line_number":4,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":true,"aliased":"(Bool | Float64 | Int32 | Int64 | String)","aliased_html":"Bool | Float64 | Int32 | Int64 | String","const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry","kind":"module","full_name":"OpenTelemetry","name":"OpenTelemetry"}},{"html_id":"opentelemetry-api/OpenTelemetry/ValueTypes","path":"OpenTelemetry/ValueTypes.html","kind":"alias","full_name":"OpenTelemetry::ValueTypes","name":"ValueTypes","abstract":false,"locations":[{"filename":"src/attribute.cr","line_number":6,"url":null}],"repository_name":"opentelemetry-api","program":false,"enum":false,"alias":true,"aliased":"(Array(Bool) | Array(Float64) | Array(Int32) | Array(Int64) | Array(String) | Bool | Float64 | Int32 | Int64 | String)","aliased_html":"Array(Bool) | Array(Float64) | Array(Int32) | Array(Int64) | Array(String) | Bool | Float64 | Int32 | Int64 | String","const":false,"namespace":{"html_id":"opentelemetry-api/OpenTelemetry","kind":"module","full_name":"OpenTelemetry","name":"OpenTelemetry"}}]}]}})